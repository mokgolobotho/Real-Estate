{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thabang\\\\Desktop\\\\myapp\\\\myapp\\\\SIMRA-Web\\\\src\\\\Pages\\\\FIB\\\\FIB.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Card, Form, Row, Col, Image, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Popup from 'reactjs-popup';\nimport { Link } from 'react-router-dom';\nimport { FaFile, FaSignOutAlt, FaChartBar, FaHome } from 'react-icons/fa';\nimport { Table, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport './FIB.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction H2S() {\n  _s();\n  const [rowCount, setRowCount] = useState(1);\n  const [Count, setCount] = useState('');\n  const [Indicator, setIndicator] = useState({});\n  const [Pathogen, setPathogen] = useState('');\n  const [Model, setModel] = useState('');\n  const [Ratio, setRatio] = useState('');\n  const [maxId, setMaxId] = useState(null);\n  const [countValues, setCountValues] = useState(['']);\n  const [selectedRatio, setSelectedRatio] = useState(1);\n  const [average, setAverage] = useState(0);\n  const [showPopup, setShowPopup] = useState(false);\n  const [pathogenResult, setPathogenResult] = useState(null);\n  const [pathogenName, setPathogenName] = useState(null);\n\n  // Function to fetch the max ID\n  useEffect(() => {\n    const fetchMaxId = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/maxId');\n        console.log('API response:', response.data);\n        if (response.data.rows && response.data.rows[0] && response.data.rows[0].lastId) {\n          setMaxId(response.data.rows[0].lastId);\n        } else {\n          console.error('Max ID not found in the response.');\n        }\n      } catch (error) {\n        console.error('Error while fetching max ID:', error);\n      }\n    };\n    fetchMaxId();\n  }, []);\n  // State to control the display of the popup\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupResultsOpen, setIsisPopupResultsOpen] = useState(false);\n  // Define a new state variable to hold the count estimate from the database\n  const [countEstimate, setCountEstimate] = useState(null);\n  // Function to handle opening the popup\n  const openPopup = () => {\n    setIsPopupOpen(true);\n  };\n  // Function to handle closing the popup\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  // Function to handle opening the popup\n  const openResultPopup = () => {\n    setIsisPopupResultsOpen(true);\n  };\n  // Function to handle closing the popup\n  const closeResultPopup = () => {\n    setIsisPopupResultsOpen(false);\n  };\n  // Mapping of indicators to ratios\n  const indicatorRatios = {\n    Coliforms: '1',\n    Ecoli: '0.66',\n    Enterococcus: '0.01',\n    Clostridium: '0.8'\n  };\n  // Mapping of indicators to ratios\n  const pathogenModel = {\n    EcoliO157H7: 'Beta-Poisson',\n    Cryptosporidiumparvum: 'Exponential',\n    ExponCampylobacterjejuniential: 'Beta-Poisson',\n    Salmonellatyphi: 'Beta-Poisson',\n    SFlexneri: 'Beta-Poisson',\n    Vibriocholera: 'Beta-Poisson',\n    Entamoebacoli: 'Beta-Poisson',\n    Campylobacterjejuni: 'Beta-Poisson',\n    Giardialamblia: 'Exponential'\n  };\n  const addRow = () => {\n    setRowCount(rowCount + 1);\n    setCount('');\n    setCountValues([...countValues, '']);\n  };\n  // Function to handle indicator change and set the corresponding ratio\n  const handleIndicatorChange = event => {\n    const selectedIndicator = event.target.value;\n    setIndicator(selectedIndicator);\n    // Set the corresponding ratio based on the selected indicator\n\n    setRatio(indicatorRatios[selectedIndicator] || '');\n  };\n  // Function to handle indicator change and set the corresponding ratio\n  const handlePathogenChange = event => {\n    const selectedPathogen = event.target.value;\n    setPathogen(selectedPathogen);\n    // Set the corresponding ratio based on the selected indicator\n    setModel(pathogenModel[selectedPathogen] || '');\n  };\n  // Function to handle closing the popup and navigate to another page\n  const closePopupAndRedirect = () => {\n    setIsPopupOpen(false);\n    setIsisPopupResultsOpen(false);\n\n    // Use the navigate function to redirect to another page\n    navigate('/QMRARun');\n  };\n  // Function to calculate the estimated count\n  const calculateEstimatedCount = () => {\n    // Check if the required fields are selected\n    if (!Indicator || !Ratio || !Pathogen || !Model) {\n      // Display an error message or handle it as needed\n      console.error('Please select all required fields');\n      return;\n    }\n    // Check if all counts are provided\n    if (countValues.some(count => count === '')) {\n      console.error('Please enter counts for all rows.');\n      return;\n    }\n    // Calculate the ratio based on the selected indicator\n    let calculatedRatio = 1;\n    if (Indicator === 'EColi') {\n      calculatedRatio = 0.66;\n    } else if (Indicator === 'Coliforms') {\n      calculatedRatio = 1;\n    } else if (Indicator === 'Enterococcus') {\n      calculatedRatio = 0.01;\n    } else if (Indicator === 'Clostridium') {\n      calculatedRatio = 0.8;\n    }\n    const estimatedCount = average * calculatedRatio;\n    setCountEstimate(estimatedCount);\n    // If no rows are added, use the first count as the value\n    if (rowCount === 1 && !isNaN(parseFloat(countValues[0]))) {\n      const firstRowValue = parseFloat(countValues[0]);\n      const estimatedCount = firstRowValue * calculatedRatio;\n      setCountEstimate(estimatedCount);\n      // Open the popup to display the result\n      openPopup();\n      openResultPopup();\n    } else {\n      // Calculate the average based on the values in countValues array\n      const firstRowValue = parseFloat(countValues[0]);\n      const secondRowValue = parseFloat(countValues[1]);\n      if (!isNaN(firstRowValue) && !isNaN(secondRowValue)) {\n        const average = (firstRowValue + secondRowValue) / 2;\n        // Set the countEstimate state using the calculated average and selected ratio\n        setCountEstimate(average * calculatedRatio);\n        // Open the popup to display the result\n        openPopup();\n        openResultPopup();\n      }\n    }\n    const selectedRatio = indicatorRatios[Indicator];\n    //\n    const selectedModel = pathogenModel[Pathogen];\n    //\n    const GetModel = pathogen => {\n      if (pathogen === \"Cryptosporidiumparvum\") {\n        return 'exponential';\n      } else if (pathogen === \"EcoliO157H7\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Campylobacterjejuni\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Salmonellatyphi\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"SFlexneri\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Vibrioholera\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Giardialamblia\") {\n        return 'exponential';\n      } else if (pathogen === \"Entamoebacoli\") {\n        return 'beta-poisson';\n      } else {\n        return '';\n      }\n    };\n    const calculateRatio = indicator => {\n      if (indicator === \"Coliforms\") {\n        return 1;\n      } else if (indicator === \"Ecoli\") {\n        return 0.66;\n      } else if (indicator === \"Enterococcus\") {\n        return 0.01;\n      } else if (indicator === \"Clostridium\") {\n        return 0.8;\n      } else {\n        return 1;\n      }\n    };\n    const data = {\n      indicator_name: Indicator,\n      count: average,\n      ratio: selectedRatio,\n      countAverage: 0,\n      samplingId: maxId\n    };\n    axios.post('http://localhost:3001/api/FIBdata', data).then(response => {\n      if (response.data.message === \"added fib\") {\n        // Update the countEstimate state with the value from the API response\n        setCountEstimate(response.data.countAverage);\n        // Open the popup to display the result\n        openPopup();\n      } else {\n        console.error('fib:', response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error while making the API request:', error);\n    });\n    const pathogenData = {\n      pathogenName: Pathogen,\n      model: Model\n    };\n    openResultPopup();\n    // Calculate the ratio based on the selected indicator\n    data.ratio = calculateRatio(Indicator);\n    data.model = GetModel(Pathogen);\n    axios.post('http://localhost:3001/api/referencepathogen', pathogenData).then(response => {\n      if (response.data.message === \"added referencepathogen\") {} else {\n        console.error('referencepathogen:', response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error while making the API request:', error);\n    });\n  };\n  const navigate = useNavigate();\n  const handleHomeNavigate = () => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      // Make an HTTP request to fetch data based on the user ID if needed\n      axios.get('http://localhost:3001/api/QMRA', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        // Handle the response if needed\n        console.log(response.data);\n        navigate('/Level', {\n          state: {\n            userId: userId\n          }\n        });\n      }).catch(error => {\n        // Handle any errors\n        console.error(error);\n      });\n    } else {\n      // Handle the case where the user ID is not found in localStorage\n      console.error('User ID not found in localStorage');\n    }\n  };\n  const [userName, setUserName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [qmraData, setQmraData] = useState([]);\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      axios.get('http://localhost:3001/api/theuser', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        if (response.data && Array.isArray(response.data.results)) {\n          // Check if the response data is an array\n          if (response.data.results.length > 0) {\n            const user = response.data.results[0]; // Assuming there's only one user\n            const userFirstName = user.firstname;\n            const userLastName = user.lastname;\n            setUserName(userFirstName);\n            setLastName(userLastName);\n            console.log('lastname', userLastName);\n          } else {\n            console.error('No user data found for the given user ID.');\n          }\n        } else {\n          console.error('API response is not in the expected format:', response.data);\n        }\n      }).catch(error => {\n        console.error('Error while fetching QMRA data:', error);\n      });\n    }\n  }, []);\n\n  // Function to calculate the average of all count values\n  const calculateAverage = () => {\n    const total = countValues.reduce((acc, value) => {\n      const parsedValue = parseFloat(value);\n      return isNaN(parsedValue) ? acc : acc + parsedValue;\n    }, 0);\n    return countValues.length > 0 ? total / countValues.length : 0;\n  };\n  useEffect(() => {\n    setAverage(calculateAverage());\n  }, [countValues]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/referencepathogen').then(response => {\n      console.log('API Response:', response.data);\n      const pathogenName = response.data.pathogenName;\n      setPathogenName(pathogenName);\n    }).catch(error => {\n      console.error('Error fetching referencepathogen:', error);\n    });\n  }, []);\n  const sendData = () => {\n    const data = {\n      pathogenName: Pathogen,\n      pathogenResult: 0\n    };\n    // Make a POST request to calculate pathogenResult using the fetched pathogenName\n    axios.post('http://localhost:3001/api/parameters', data).then(response => {\n      const pathogenResult = response.data.pathogenResult;\n      setPathogenResult(pathogenResult);\n      openResultPopup();\n      //displayPathogenResult(pathogenResult);\n      console.error('parameters added successfully:', response);\n      setShowPopup(true);\n    }).catch(error => {\n      console.error('Error calculating pathogenResult:', error);\n    });\n  };\n  const closePop = () => {\n    setShowPopup(false);\n  };\n  let riskLevelBlock = null;\n  if (Math.round(pathogenResult) <= 0) {\n    riskLevelBlock = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Absence of faecal contamination  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          backgroundColor: 'green',\n          padding: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: \"LOW RISK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    riskLevelBlock = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-5\",\n        style: {\n          color: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Presence of faecal contamination  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          backgroundColor: 'red',\n          padding: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: \"VERY HIGH RISK \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"text-center \",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/CleaningEnglish\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              variant: \"outline-primary\",\n              className: \"show\",\n              children: \"SHOW METHODS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  const handleQMRA = () => {\n    navigate('/LikelihoodOfInfection');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"bg-body-tertiary\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n          className: \"bg-body-tertiary\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n              href: \"#home\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                alt: \"\",\n                src: \"images/SimraLogo.png\",\n                width: \"60\",\n                height: \"40\",\n                className: \"d-inline-block align-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this), ' ', \"SIMRA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Navbar.Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        sm: 0,\n        md: 0,\n        lg: 2,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          className: \"side mt-5 \",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: 'rgba(108, 117, 125, 0.5)',\n              height: '500px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                size: \"lg\",\n                style: {\n                  width: '100%'\n                },\n                onClick: handleHomeNavigate,\n                children: [/*#__PURE__*/_jsxDEV(FaHome, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 134\n                }, this), \" Home\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                size: \"lg\",\n                style: {\n                  width: '100%'\n                },\n                onClick: handleQMRA,\n                children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 37\n                }, this), \" QMRA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    width: '85%',\n                    backgroundColor: 'black'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 113\n                  }, this), \" Logout\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 30,\n        sm: 8,\n        md: 6,\n        lg: 10,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"mt-5 mb-5 mx-auto\",\n          style: {\n            background: 'rgba(255, 255, 255,0.7)',\n            borderRadius: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \" mb-5\",\n            children: \" FAECAL INDICATOR BACTERIA DATA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Indicator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Ratio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Reference Pathogen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Model\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Array.from({\n                length: rowCount\n              }).map((_, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: `count_${index + 1}`,\n                    value: countValues[index],\n                    onChange: event => {\n                      const updatedCountValues = [...countValues];\n                      updatedCountValues[index] = event.target.value;\n                      setCountValues(updatedCountValues);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: `indicator_${index + 1}`,\n                    onChange: handleIndicatorChange,\n                    value: Indicator,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"--Select--\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Coliforms\",\n                      children: \"Coliforms\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Ecoli\",\n                      children: \"E. coli\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Enterococcus\",\n                      children: \"Enterococcus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Clostridium\",\n                      children: \"Clostridium\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"text\",\n                    name: `other_indicator_${index + 1}`,\n                    style: {\n                      display: 'none'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: `ratio_${index + 1}`,\n                    value: Ratio,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"--Select--\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"1:1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"0.66\",\n                      children: \"1:0.66\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"0.01\",\n                      children: \"1:0.01\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"0.8\",\n                      children: \"1:0.8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"text\",\n                    name: `other_ratio_${index + 1}`,\n                    style: {\n                      display: 'none'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: `pathogen_${index + 1}`,\n                    onChange: handlePathogenChange,\n                    value: Pathogen,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"--Select--\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Cryptosporidiumparvum\",\n                      children: \"Cryptosporidium parvum\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"EcoliO157H7\",\n                      children: \"E. coli O157:H7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Campylobacterjejuni\",\n                      children: \"Campylobacter jejuni\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Salmonellatyphi\",\n                      children: \"Salmonella typhi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"SFlexneri\",\n                      children: \"S. Flexneri\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Vibriocholera\",\n                      children: \"Vibrio cholera\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Giardialamblia\",\n                      children: \"Giardia lambia\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Entamoebacoli\",\n                      children: \"Entamoeba coli\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"text\",\n                    name: `other_pathogen_${index + 1}`,\n                    style: {\n                      display: 'none'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: `model_${index + 1}`,\n                    value: Model,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"--Select--\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Beta-Poisson\",\n                      children: \"Beta-Poisson\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Exponential\",\n                      children: \"Exponential\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"text\",\n                    name: `other_model_${index + 1}`,\n                    style: {\n                      display: 'none'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 41\n                }, this)]\n              }, index + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn mt-5\",\n            variant: \"primary\",\n            id: \"add-row-btn\",\n            style: {\n              background: 'rgba(108, 117, 125)',\n              width: '250px',\n              display: 'block',\n              margin: '0 auto',\n              color: 'white'\n            },\n            onClick: addRow,\n            children: \"Add Row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Average of Count : \", calculateAverage()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn mt-5 mb-5\",\n              id: \"calculateEstimatedCount\",\n              style: {\n                background: 'rgba(108, 117, 125)',\n                width: '250px',\n                margin: '0 auto',\n                color: 'white'\n              },\n              onClick: calculateEstimatedCount,\n              children: \"ESTIMATED COUNT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Popup, {\n              open: isPopupOpen,\n              closeOnDocumentClick: true,\n              onClose: closePopup,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup-content text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Count Estimate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 37\n                }, this), countEstimate !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"ESTIMATED COUNT : \", countEstimate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Results addedd successfully\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    color: 'black'\n                  },\n                  onClick: sendData,\n                  children: \"RUN QMRA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 33\n              }, this), showPopup && /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outline-primary\",\n                className: \"scroll\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom-popup text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"popup-content text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"THE SELECTED PATHOGEN NAME : \", Pathogen, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 560,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"FIB PROBABALITY OF INFECTION : \", pathogenResult, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 561,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: closePop,\n                        className: \"close-button\",\n                        style: {\n                          color: 'black'\n                        },\n                        children: \"Close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: riskLevelBlock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 9\n  }, this);\n}\n_s(H2S, \"Vi99EkX/X9t5dRIi6AjgB3fVYcQ=\", false, function () {\n  return [useNavigate];\n});\n_c = H2S;\nexport default H2S;\nvar _c;\n$RefreshReg$(_c, \"H2S\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","Card","Form","Row","Col","Image","Navbar","Popup","Link","FaFile","FaSignOutAlt","FaChartBar","FaHome","Table","FormControl","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","H2S","_s","rowCount","setRowCount","Count","setCount","Indicator","setIndicator","Pathogen","setPathogen","Model","setModel","Ratio","setRatio","maxId","setMaxId","countValues","setCountValues","selectedRatio","setSelectedRatio","average","setAverage","showPopup","setShowPopup","pathogenResult","setPathogenResult","pathogenName","setPathogenName","fetchMaxId","response","get","console","log","data","rows","lastId","error","isPopupOpen","setIsPopupOpen","isPopupResultsOpen","setIsisPopupResultsOpen","countEstimate","setCountEstimate","openPopup","closePopup","openResultPopup","closeResultPopup","indicatorRatios","Coliforms","Ecoli","Enterococcus","Clostridium","pathogenModel","EcoliO157H7","Cryptosporidiumparvum","ExponCampylobacterjejuniential","Salmonellatyphi","SFlexneri","Vibriocholera","Entamoebacoli","Campylobacterjejuni","Giardialamblia","addRow","handleIndicatorChange","event","selectedIndicator","target","value","handlePathogenChange","selectedPathogen","closePopupAndRedirect","navigate","calculateEstimatedCount","some","count","calculatedRatio","estimatedCount","isNaN","parseFloat","firstRowValue","secondRowValue","selectedModel","GetModel","pathogen","calculateRatio","indicator","indicator_name","ratio","countAverage","samplingId","post","then","message","catch","pathogenData","model","handleHomeNavigate","userId","localStorage","getItem","params","state","userName","setUserName","lastName","setLastName","qmraData","setQmraData","Array","isArray","results","length","user","userFirstName","firstname","userLastName","lastname","calculateAverage","total","reduce","acc","parsedValue","sendData","closePop","riskLevelBlock","Math","round","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","padding","color","Text","to","variant","handleQMRA","Toggle","Brand","href","alt","src","width","height","Collapse","xs","sm","md","lg","fluid","Body","size","onClick","background","borderRadius","striped","bordered","from","map","_","index","Control","type","name","onChange","updatedCountValues","as","display","class","id","margin","open","closeOnDocumentClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Thabang/Desktop/myapp/myapp/SIMRA-Web/src/Pages/FIB/FIB.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Container, Card, Form, Row, Col, Image, Navbar } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Popup from 'reactjs-popup';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaFile, FaSignOutAlt, FaChartBar, FaHome } from 'react-icons/fa';\r\nimport { Table, FormControl } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './FIB.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction H2S() {\r\n    const [rowCount, setRowCount] = useState(1);\r\n    const [Count, setCount] = useState('');\r\n    const [Indicator, setIndicator] = useState({});\r\n    const [Pathogen, setPathogen] = useState('');\r\n    const [Model, setModel] = useState('');\r\n    const [Ratio, setRatio] = useState('');\r\n    const [maxId, setMaxId] = useState(null);\r\n    const [countValues, setCountValues] = useState(['']);\r\n    const [selectedRatio, setSelectedRatio] = useState(1);\r\n    const [average, setAverage] = useState(0);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [pathogenResult, setPathogenResult] = useState(null);\r\n    const [pathogenName, setPathogenName] = useState(null);\r\n\r\n    // Function to fetch the max ID\r\n    useEffect(() => {\r\n        const fetchMaxId = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/api/maxId');\r\n                console.log('API response:', response.data);\r\n                if (response.data.rows && response.data.rows[0] && response.data.rows[0].lastId) {\r\n                    setMaxId(response.data.rows[0].lastId);\r\n                } else {\r\n                    console.error('Max ID not found in the response.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error while fetching max ID:', error);\r\n            }\r\n        };\r\n        fetchMaxId();\r\n    }, []);\r\n    // State to control the display of the popup\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [isPopupResultsOpen, setIsisPopupResultsOpen] = useState(false);\r\n    // Define a new state variable to hold the count estimate from the database\r\n    const [countEstimate, setCountEstimate] = useState(null);\r\n    // Function to handle opening the popup\r\n    const openPopup = () => {\r\n        setIsPopupOpen(true);\r\n    };\r\n    // Function to handle closing the popup\r\n    const closePopup = () => {\r\n        setIsPopupOpen(false);\r\n    };\r\n    // Function to handle opening the popup\r\n    const openResultPopup = () => {\r\n        setIsisPopupResultsOpen(true);\r\n    };\r\n    // Function to handle closing the popup\r\n    const closeResultPopup = () => {\r\n        setIsisPopupResultsOpen(false);\r\n    };\r\n    // Mapping of indicators to ratios\r\n    const indicatorRatios = {\r\n        Coliforms: '1',\r\n        Ecoli: '0.66',\r\n        Enterococcus: '0.01',\r\n        Clostridium: '0.8',\r\n    };\r\n    // Mapping of indicators to ratios\r\n    const pathogenModel = {\r\n        EcoliO157H7: 'Beta-Poisson',\r\n        Cryptosporidiumparvum: 'Exponential',\r\n        ExponCampylobacterjejuniential: 'Beta-Poisson',\r\n        Salmonellatyphi: 'Beta-Poisson',\r\n        SFlexneri: 'Beta-Poisson',\r\n        Vibriocholera: 'Beta-Poisson',\r\n        Entamoebacoli: 'Beta-Poisson',\r\n        Campylobacterjejuni: 'Beta-Poisson',\r\n        Giardialamblia: 'Exponential',\r\n    }\r\n    const addRow = () => {\r\n        setRowCount(rowCount + 1);\r\n        setCount('');\r\n        setCountValues([...countValues, '']);\r\n    };\r\n    // Function to handle indicator change and set the corresponding ratio\r\n    const handleIndicatorChange = (event) => {\r\n        const selectedIndicator = event.target.value;\r\n        setIndicator(selectedIndicator);\r\n        // Set the corresponding ratio based on the selected indicator\r\n\r\n        setRatio(indicatorRatios[selectedIndicator] || '');\r\n    };\r\n    // Function to handle indicator change and set the corresponding ratio\r\n    const handlePathogenChange = (event) => {\r\n        const selectedPathogen = event.target.value;\r\n        setPathogen(selectedPathogen);\r\n        // Set the corresponding ratio based on the selected indicator\r\n        setModel(pathogenModel[selectedPathogen] || '');\r\n    };\r\n    // Function to handle closing the popup and navigate to another page\r\n    const closePopupAndRedirect = () => {\r\n        setIsPopupOpen(false);\r\n        setIsisPopupResultsOpen(false);\r\n\r\n        // Use the navigate function to redirect to another page\r\n        navigate('/QMRARun');\r\n    };\r\n    // Function to calculate the estimated count\r\n    const calculateEstimatedCount = () => {\r\n\r\n        // Check if the required fields are selected\r\n        if (!Indicator || !Ratio || !Pathogen || !Model) {\r\n            // Display an error message or handle it as needed\r\n            console.error('Please select all required fields');\r\n            return;\r\n        }\r\n        // Check if all counts are provided\r\n        if (countValues.some(count => count === '')) {\r\n           \r\n            console.error('Please enter counts for all rows.');\r\n            return;\r\n        }\r\n        // Calculate the ratio based on the selected indicator\r\n        let calculatedRatio = 1;\r\n        if (Indicator === 'EColi') {\r\n            calculatedRatio = 0.66;\r\n        } else if (Indicator === 'Coliforms') {\r\n            calculatedRatio = 1;\r\n        } else if (Indicator === 'Enterococcus') {\r\n            calculatedRatio = 0.01;\r\n        } else if (Indicator === 'Clostridium') {\r\n            calculatedRatio = 0.8;\r\n        }\r\n        const estimatedCount = average * calculatedRatio;\r\n        setCountEstimate(estimatedCount);\r\n        // If no rows are added, use the first count as the value\r\n        if (rowCount === 1 && !isNaN(parseFloat(countValues[0]))) {\r\n            const firstRowValue = parseFloat(countValues[0]);\r\n            const estimatedCount = firstRowValue * calculatedRatio;\r\n            setCountEstimate(estimatedCount);\r\n            // Open the popup to display the result\r\n            openPopup();\r\n            openResultPopup();\r\n        } else {\r\n            // Calculate the average based on the values in countValues array\r\n            const firstRowValue = parseFloat(countValues[0]);\r\n            const secondRowValue = parseFloat(countValues[1]);\r\n\r\n            if (!isNaN(firstRowValue) && !isNaN(secondRowValue)) {\r\n                const average = (firstRowValue + secondRowValue) / 2;\r\n                // Set the countEstimate state using the calculated average and selected ratio\r\n                setCountEstimate(average * calculatedRatio);\r\n                // Open the popup to display the result\r\n                openPopup();\r\n                openResultPopup();\r\n            }\r\n        }\r\n        const selectedRatio = indicatorRatios[Indicator];\r\n        //\r\n        const selectedModel = pathogenModel[Pathogen];\r\n        //\r\n        const GetModel = (pathogen) => {\r\n            if (pathogen === \"Cryptosporidiumparvum\") {\r\n                return 'exponential';\r\n            } else if (pathogen === \"EcoliO157H7\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Campylobacterjejuni\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Salmonellatyphi\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"SFlexneri\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Vibrioholera\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Giardialamblia\") {\r\n                return 'exponential';\r\n            } else if (pathogen === \"Entamoebacoli\") {\r\n                return 'beta-poisson';\r\n            } else {\r\n                return '';\r\n            }\r\n        };\r\n        const calculateRatio = (indicator) => {\r\n            if (indicator === \"Coliforms\") {\r\n                return 1;\r\n            } else if (indicator === \"Ecoli\") {\r\n                return 0.66;\r\n            } else if (indicator === \"Enterococcus\") {\r\n                return 0.01;\r\n            } else if (indicator === \"Clostridium\") {\r\n                return 0.8;\r\n            } else {\r\n                return 1;\r\n            }\r\n        };\r\n\r\n        \r\n\r\n        const data = {\r\n            indicator_name: Indicator,\r\n            count: average,\r\n            ratio: selectedRatio,\r\n            countAverage: 0,\r\n            samplingId: maxId,\r\n        }\r\n        axios.post('http://localhost:3001/api/FIBdata', data)\r\n            .then((response) => {\r\n                if (response.data.message === \"added fib\") {\r\n                    // Update the countEstimate state with the value from the API response\r\n                    setCountEstimate(response.data.countAverage);\r\n                    // Open the popup to display the result\r\n                    openPopup();\r\n\r\n                } else {\r\n                    console.error('fib:', response.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error while making the API request:', error);\r\n            });\r\n        const pathogenData = {\r\n            pathogenName: Pathogen,\r\n            model: Model,\r\n        }\r\n        openResultPopup();\r\n        // Calculate the ratio based on the selected indicator\r\n        data.ratio = calculateRatio(Indicator);\r\n        data.model = GetModel(Pathogen);\r\n        axios.post('http://localhost:3001/api/referencepathogen', pathogenData)\r\n            .then((response) => {\r\n                if (response.data.message === \"added referencepathogen\") {\r\n                } else {\r\n                    console.error('referencepathogen:', response.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error while making the API request:', error);\r\n            });\r\n    };\r\n    const navigate = useNavigate();\r\n    const handleHomeNavigate = () => {\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        if (userId) {\r\n            // Make an HTTP request to fetch data based on the user ID if needed\r\n            axios.get('http://localhost:3001/api/QMRA', {\r\n                params: {\r\n                    userId: userId,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    // Handle the response if needed\r\n                    console.log(response.data);\r\n                    navigate('/Level', { state: { userId: userId } });\r\n                })\r\n                .catch((error) => {\r\n                    // Handle any errors\r\n                    console.error(error);\r\n                });\r\n        } else {\r\n            // Handle the case where the user ID is not found in localStorage\r\n            console.error('User ID not found in localStorage');\r\n        }\r\n    };\r\n    const [userName, setUserName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [qmraData, setQmraData] = useState([]);\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId');\r\n        if (userId) {\r\n            axios\r\n                .get('http://localhost:3001/api/theuser', {\r\n                    params: {\r\n                        userId: userId,\r\n                    },\r\n                })\r\n                .then(response => {\r\n                    if (response.data && Array.isArray(response.data.results)) {\r\n                        // Check if the response data is an array\r\n                        if (response.data.results.length > 0) {\r\n                            const user = response.data.results[0]; // Assuming there's only one user\r\n                            const userFirstName = user.firstname;\r\n                            const userLastName = user.lastname;\r\n                            setUserName(userFirstName);\r\n                            setLastName(userLastName);\r\n                            console.log('lastname', userLastName);\r\n                        } else {\r\n                            console.error('No user data found for the given user ID.');\r\n                        }\r\n                    } else {\r\n                        console.error('API response is not in the expected format:', response.data);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error while fetching QMRA data:', error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    // Function to calculate the average of all count values\r\n    const calculateAverage = () => {\r\n\r\n        const total = countValues.reduce((acc, value) => {\r\n            const parsedValue = parseFloat(value);\r\n            return isNaN(parsedValue) ? acc : acc + parsedValue;\r\n        }, 0);\r\n        return countValues.length > 0 ? total / countValues.length : 0;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setAverage(calculateAverage());\r\n    }, [countValues]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/api/referencepathogen')\r\n            .then((response) => {\r\n                console.log('API Response:', response.data);\r\n                const pathogenName = response.data.pathogenName;\r\n                setPathogenName(pathogenName);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching referencepathogen:', error);\r\n            });\r\n\r\n    }, []);\r\n\r\n    const sendData = () => {\r\n        const data = {\r\n            pathogenName: Pathogen,\r\n            pathogenResult: 0,\r\n        }\r\n        // Make a POST request to calculate pathogenResult using the fetched pathogenName\r\n        axios.post('http://localhost:3001/api/parameters', data)\r\n            .then((response) => {\r\n                const pathogenResult = response.data.pathogenResult;\r\n                setPathogenResult(pathogenResult);\r\n                openResultPopup();\r\n                //displayPathogenResult(pathogenResult);\r\n                console.error('parameters added successfully:', response);\r\n                setShowPopup(true);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error calculating pathogenResult:', error);\r\n            });\r\n    }\r\n    const closePop = () => {\r\n        setShowPopup(false);\r\n    };\r\n    let riskLevelBlock = null;\r\n    if (Math.round(pathogenResult) <= 0) {\r\n        riskLevelBlock = (\r\n            <>\r\n                <div className='text-center mb-5'>\r\n                    <h3>Absence of faecal contamination  </h3>\r\n                </div>\r\n                <div className='text-center' style={{ backgroundColor: 'green', padding: '15px' }}>\r\n                    <span style={{ color: 'black' }}>LOW RISK</span>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        riskLevelBlock = (\r\n            <>\r\n                <div className='text-center mb-5' style={{ color: 'red' }}>\r\n                    <h3>Presence of faecal contamination  </h3>\r\n                </div>\r\n                <div className='text-center' style={{ backgroundColor: 'red', padding: '5px' }}>\r\n                    <span style={{ color: 'black' }}>VERY HIGH RISK </span>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Card.Text className=\"text-center \">\r\n\r\n                        <Link to=\"/CleaningEnglish\"><button variant=\"outline-primary\" className='show' >SHOW METHODS</button></Link>\r\n                    </Card.Text>\r\n                </div></>\r\n        );\r\n    }\r\n    const handleQMRA = () => {\r\n        navigate('/LikelihoodOfInfection');\r\n    };\r\n    return (\r\n        <div className=\"App\" >\r\n            <Navbar className=\"bg-body-tertiary\">\r\n                <Container>\r\n                    <Navbar.Toggle />\r\n                    <Navbar className=\"bg-body-tertiary\">\r\n                        <Container>\r\n                            <Navbar.Brand href=\"#home\" >\r\n                                <Image\r\n                                    alt=\"\"\r\n                                    src=\"images/SimraLogo.png\"\r\n                                    width=\"60\"\r\n                                    height=\"40\"\r\n                                    className=\"d-inline-block align-left\"\r\n                                />{' '}\r\n                                SIMRA\r\n                            </Navbar.Brand>\r\n                        </Container>\r\n                    </Navbar>\r\n                </Container>\r\n                <Container>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <Row>\r\n                <Col xs={6} sm={0} md={0} lg={2} >\r\n                    <Container fluid className=\"side mt-5 \" >\r\n                        <Card style={{ backgroundColor: 'rgba(108, 117, 125, 0.5)', height: '500px' }}>\r\n                            <Card.Body ><Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} onClick={handleHomeNavigate}><FaHome /> Home</Button></Card.Body>\r\n                            <Card.Body>\r\n                                <Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} onClick={handleQMRA}>\r\n                                    <FaChartBar /> QMRA\r\n                                </Button>\r\n                            </Card.Body>\r\n                            <Card.Body><Link to=\"/\"> <Button style={{ width: '85%', backgroundColor: 'black' }}><FaSignOutAlt /> Logout</Button></Link></Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                </Col>\r\n                <Col xs={30} sm={8} md={6} lg={10} >\r\n\r\n\r\n                    <Container className=\"mt-5 mb-5 mx-auto\" style={{ background: 'rgba(255, 255, 255,0.7)', borderRadius: '30px' }} >\r\n                        <h3 className=' mb-5' > FAECAL INDICATOR BACTERIA DATA</h3>\r\n                        <Table striped bordered >\r\n\r\n                            <thead className=\"table-primary\">\r\n                                <tr>\r\n                                    <th>Count</th>\r\n                                    <th>Indicator</th>\r\n                                    <th>Ratio</th>\r\n                                    <th>Reference Pathogen</th>\r\n                                    <th>Model</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Array.from({ length: rowCount }).map((_, index) => (\r\n                                    <tr key={index + 1}>\r\n                                        <td>\r\n                                            <Form.Control type=\"text\" name={`count_${index + 1}`} value={countValues[index]}\r\n                                                onChange={(event) => {\r\n                                                    const updatedCountValues = [...countValues];\r\n                                                    updatedCountValues[index] = event.target.value;\r\n                                                    setCountValues(updatedCountValues);\r\n                                                }} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\" name={`indicator_${index + 1}`} onChange={handleIndicatorChange} value={Indicator} >\r\n                                                <option value=\"\">--Select--</option>\r\n                                                <option value=\"Coliforms\">Coliforms</option>\r\n                                                <option value=\"Ecoli\">E. coli</option>\r\n                                                <option value=\"Enterococcus\">Enterococcus</option>\r\n                                                <option value=\"Clostridium\">Clostridium</option>\r\n\r\n                                            </Form.Control>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                name={`other_indicator_${index + 1}`}\r\n                                                style={{ display: 'none' }}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\" name={`ratio_${index + 1}`} value={Ratio}>\r\n                                                <option value=\"\">--Select--</option>\r\n                                                <option value=\"1\">1:1</option>\r\n                                                <option value=\"0.66\">1:0.66</option>\r\n                                                <option value=\"0.01\">1:0.01</option>\r\n                                                <option value=\"0.8\">1:0.8</option>\r\n                                            </Form.Control>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                name={`other_ratio_${index + 1}`}\r\n                                                style={{ display: 'none' }}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\" name={`pathogen_${index + 1}`} onChange={handlePathogenChange} value={Pathogen}>\r\n                                                <option value=\"\">--Select--</option>\r\n                                                <option value=\"Cryptosporidiumparvum\">Cryptosporidium parvum</option>\r\n                                                <option value=\"EcoliO157H7\">E. coli O157:H7</option>\r\n                                                <option value=\"Campylobacterjejuni\">Campylobacter jejuni</option>\r\n                                                <option value=\"Salmonellatyphi\">Salmonella typhi</option>\r\n                                                <option value=\"SFlexneri\">S. Flexneri</option>\r\n                                                <option value=\"Vibriocholera\">Vibrio cholera</option>\r\n                                                <option value=\"Giardialamblia\">Giardia lambia</option>\r\n                                                <option value=\"Entamoebacoli\">Entamoeba coli</option>\r\n\r\n                                            </Form.Control>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                name={`other_pathogen_${index + 1}`}\r\n                                                style={{ display: 'none' }}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\" name={`model_${index + 1}`} value={Model}>\r\n                                                <option value=\"\">--Select--</option>\r\n                                                <option value=\"Beta-Poisson\">Beta-Poisson</option>\r\n                                                <option value=\"Exponential\">Exponential</option>\r\n                                            </Form.Control>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                name={`other_model_${index + 1}`}\r\n                                                style={{ display: 'none' }}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <button class=\"btn mt-5\" variant=\"primary\" id=\"add-row-btn\" style={{\r\n                            background: 'rgba(108, 117, 125)',\r\n                            width: '250px',\r\n                            display: 'block',\r\n                            margin: '0 auto',\r\n                            color: 'white',\r\n                        }} onClick={addRow}>\r\n                            Add Row\r\n                        </button>\r\n                        <div>\r\n                            <p>Average of Count : {calculateAverage()}</p>\r\n                        </div>\r\n                        <div className='mb-5'>\r\n                            <button className=\"btn mt-5 mb-5\" id=\"calculateEstimatedCount\" style={{\r\n                                background: 'rgba(108, 117, 125)',\r\n                                width: '250px',\r\n\r\n                                margin: '0 auto',\r\n                                color: 'white',\r\n                            }} onClick={calculateEstimatedCount}>\r\n                                ESTIMATED COUNT\r\n                            </button>\r\n                            <Popup open={isPopupOpen} closeOnDocumentClick onClose={closePopup}>\r\n                                <div className=\"popup-content text-center\">\r\n                                    <h2>Count Estimate</h2>\r\n                                    {countEstimate !== null && (\r\n                                        <p>ESTIMATED COUNT : {countEstimate}</p>\r\n                                    )}\r\n                                    <p>Results addedd successfully</p>\r\n                                    <button style={{ color: 'black' }} onClick={sendData}>RUN QMRA</button>\r\n                                </div>\r\n                                {showPopup && (\r\n                                    <Card variant=\"outline-primary\" className='scroll'>\r\n                                        <Card.Text>\r\n                                            <div className=\"custom-popup text-center\">\r\n                                                <div className=\"popup-content text-center\">\r\n\r\n                                                    <div>\r\n                                                        <p>THE SELECTED PATHOGEN NAME : {Pathogen} </p>\r\n                                                        <p>FIB PROBABALITY OF INFECTION : {pathogenResult} </p>\r\n                                                    </div>\r\n\r\n                                                    <button onClick={closePop} className=\"close-button\" style={{ color: 'black' }}>\r\n                                                        Close\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </Card.Text>\r\n                                        <Card.Text>{riskLevelBlock}</Card.Text>\r\n                                    </Card>\r\n                                )}\r\n                            </Popup>\r\n                        </div>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\nexport default H2S;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}