{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thabang\\\\Desktop\\\\myapp\\\\myapp\\\\SIMRA-Web\\\\src\\\\Pages\\\\MST\\\\MST.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card, Table, Button, Form, Row, Col, Image, Navbar } from 'react-bootstrap';\nimport Modal from 'react-modal';\nimport { useNavigate } from 'react-router-dom';\nimport { FaFile, FaSignOutAlt, FaChartBar, FaHome } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FormControl } from 'react-bootstrap';\nimport Popup from 'reactjs-popup';\nimport './MST.css';\nimport backgroundImage from './back.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rowCount, setRowCount] = useState(1);\n  const [Count, setCount] = useState('');\n  const [Indicator, setIndicator] = useState({});\n  const [Pathogen, setPathogen] = useState('');\n  const [Model, setModel] = useState('');\n  const [Ratio, setRatio] = useState('');\n  const [maxId, setMaxId] = useState(null);\n  const [countValues, setCountValues] = useState(['']);\n  const [selectedRatio, setSelectedRatio] = useState(1);\n  const [average, setAverage] = useState(0);\n  const [pathogenResult, setPathogenResult] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [infectionResult, setInfectionResult] = useState('');\n  const [selectedExposure, setSelectedExposure] = useState('');\n  const [pathogenName, setPathogenName] = useState(null);\n\n  // Function to fetch the max ID\n  useEffect(() => {\n    const fetchMaxId = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/maxId');\n        console.log('API response:', response.data);\n        if (response.data.rows && response.data.rows[0] && response.data.rows[0].lastId) {\n          setMaxId(response.data.rows[0].lastId);\n        } else {\n          console.error('Max ID not found in the response.');\n        }\n      } catch (error) {\n        console.error('Error while fetching max ID:', error);\n      }\n    };\n    fetchMaxId();\n  }, []);\n  // State to control the display of the popup\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupResultsOpen, setIsisPopupResultsOpen] = useState(false);\n  // Define a new state variable to hold the count estimate from the database\n  const [countEstimate, setCountEstimate] = useState(null);\n  // Function to handle opening the popup\n  const openPopup = () => {\n    setIsPopupOpen(true);\n  };\n  // Function to handle closing the popup\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };\n  // Function to handle opening the popup\n  const openResultPopup = () => {\n    setIsisPopupResultsOpen(true);\n  };\n  // Function to handle closing the popup\n  const closeResultPopup = () => {\n    setIsisPopupResultsOpen(false);\n  };\n  // Mapping of indicators to ratios\n  const indicatorRatios = {\n    Cow: '0.66',\n    Human: '1',\n    Dog: '0.01',\n    Pig: '0.8',\n    Chicken: '0.01'\n  };\n  // Mapping of indicators to ratios\n  const pathogenModel = {\n    EcoliO157H7: 'Beta-Poisson',\n    Cryptosporidiumparvum: 'Exponential',\n    ExponCampylobacterjejuniential: 'Beta-Poisson',\n    Salmonellatyphi: 'Beta-Poisson',\n    SFlexneri: 'Beta-Poisson',\n    Vibriocholera: 'Beta-Poisson',\n    Entamoebacoli: 'Beta-Poisson',\n    Campylobacterjejuni: 'Beta-Poisson',\n    Giardialamblia: 'Exponential'\n  };\n  const addRow = () => {\n    setRowCount(rowCount + 1);\n    setCount('');\n    setCountValues([...countValues, '']);\n  };\n  // Function to handle indicator change and set the corresponding ratio\n  const handleIndicatorChange = event => {\n    const selectedIndicator = event.target.value;\n    setIndicator(selectedIndicator);\n    // Set the corresponding ratio based on the selected indicator\n\n    setRatio(indicatorRatios[selectedIndicator] || '');\n  };\n  // Function to handle indicator change and set the corresponding ratio\n  const handlePathogenChange = event => {\n    const selectedPathogen = event.target.value;\n    setPathogen(selectedPathogen);\n    // Set the corresponding ratio based on the selected indicator\n    setModel(pathogenModel[selectedPathogen] || '');\n  };\n  // Function to handle closing the popup and navigate to another page\n  const closePopupAndRedirect = () => {\n    setIsPopupOpen(false);\n    setIsisPopupResultsOpen(false);\n\n    // Use the navigate function to redirect to another page\n    navigate('/QMRARun');\n  };\n  // Function to calculate the estimated count\n  const calculateEstimatedCount = () => {\n    // Check if the required fields are selected\n    if (!Indicator || !Ratio || !Pathogen || !Model) {\n      // Display an error message or handle it as needed\n      console.error('Please select all required fields');\n      return;\n    }\n    // Check if all counts are provided\n    if (countValues.some(count => count === '')) {\n      console.error('Please enter counts for all rows.');\n      return;\n    }\n    // Calculate the ratio based on the selected indicator\n    let calculatedRatio = 1;\n    if (Indicator === 'Cow') {\n      calculatedRatio = 0.66;\n    } else if (Indicator === 'Human') {\n      calculatedRatio = 1;\n    } else if (Indicator === 'Dog') {\n      calculatedRatio = 0.01;\n    } else if (Indicator === 'Pig') {\n      calculatedRatio = 0.8;\n    } else if (Indicator === 'Chicken') {\n      calculatedRatio = 0.01;\n    }\n    const estimatedCount = average * calculatedRatio;\n    setCountEstimate(estimatedCount);\n    // If no rows are added, use the first count as the value\n    if (rowCount === 1 && !isNaN(parseFloat(countValues[0]))) {\n      const firstRowValue = parseFloat(countValues[0]);\n      const estimatedCount = firstRowValue * calculatedRatio;\n      setCountEstimate(estimatedCount);\n      // Open the popup to display the result\n      openPopup();\n      openResultPopup();\n    } else {\n      // Calculate the average based on the values in countValues array\n      const firstRowValue = parseFloat(countValues[0]);\n      const secondRowValue = parseFloat(countValues[1]);\n      if (!isNaN(firstRowValue) && !isNaN(secondRowValue)) {\n        const average = (firstRowValue + secondRowValue) / 2;\n        // Set the countEstimate state using the calculated average and selected ratio\n        setCountEstimate(average * calculatedRatio);\n        // Open the popup to display the result\n        openPopup();\n        openResultPopup();\n      }\n    }\n    const selectedRatio = indicatorRatios[Indicator];\n    //\n    const selectedModel = pathogenModel[Pathogen];\n    //\n    const GetModel = pathogen => {\n      if (pathogen === \"Cryptosporidiumparvum\") {\n        return 'exponential';\n      } else if (pathogen === \"EcoliO157H7\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Campylobacterjejuni\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Salmonellatyphi\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"SFlexneri\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Vibrioholera\") {\n        return 'beta-poisson';\n      } else if (pathogen === \"Giardialamblia\") {\n        return 'exponential';\n      } else if (pathogen === \"Entamoebacoli\") {\n        return 'beta-poisson';\n      } else {\n        return '';\n      }\n    };\n    const calculateRatio = indicator => {\n      if (indicator === \"Cow\") {\n        return 0.66;\n      } else if (indicator === \"Human\") {\n        return 1;\n      } else if (indicator === \"Dog\") {\n        return 0.01;\n      } else if (indicator === \"Pig\") {\n        return 0.8;\n      } else if (indicator === \"Chicken\") {\n        return 0.01;\n      } else {\n        return 1;\n      }\n    };\n    const data = {\n      mstdata_names: Indicator,\n      count_mst: average,\n      ratio_mst: selectedRatio,\n      count_estimate: 0,\n      samplingId: maxId\n    };\n    axios.post('http://localhost:3001/api/mstEstimate', data).then(response => {\n      if (response.data.message === \"added MST\") {\n        // Update the countEstimate state with the value from the API response\n        setCountEstimate(response.data.countAverage);\n        // Open the popup to display the result\n        openPopup();\n      } else {\n        console.error('MST : ', response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error while making the API request:', error);\n    });\n    const pathogenData = {\n      pathogenName: Pathogen,\n      model: Model\n    };\n    openResultPopup();\n    // Calculate the ratio based on the selected indicator\n    data.ratio = calculateRatio(Indicator);\n    data.model = GetModel(Pathogen);\n    axios.post('http://localhost:3001/api/mstreference', pathogenData).then(response => {\n      if (response.data.message === \"added mstreference\") {} else {\n        console.error('mstreference:', response.data.message);\n      }\n    }).catch(error => {\n      console.error('Error while making the API request:', error);\n    });\n  };\n  const navigate = useNavigate();\n  const handleHomeNavigate = () => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      // Make an HTTP request to fetch data based on the user ID if needed\n      axios.get('http://localhost:3001/api/QMRA', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        // Handle the response if needed\n        console.log(response.data);\n        navigate('/Level3', {\n          state: {\n            userId: userId\n          }\n        });\n      }).catch(error => {\n        // Handle any errors\n        console.error(error);\n      });\n    } else {\n      // Handle the case where the user ID is not found in localStorage\n      console.error('User ID not found in localStorage');\n    }\n  };\n  const [userName, setUserName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [qmraData, setQmraData] = useState([]);\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      axios.get('http://localhost:3001/api/theuser', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        if (response.data && Array.isArray(response.data.results)) {\n          // Check if the response data is an array\n          if (response.data.results.length > 0) {\n            const user = response.data.results[0]; // Assuming there's only one user\n            const userFirstName = user.firstname;\n            const userLastName = user.lastname;\n            setUserName(userFirstName);\n            setLastName(userLastName);\n            console.log('lastname', userLastName);\n          } else {\n            console.error('No user data found for the given user ID.');\n          }\n        } else {\n          console.error('API response is not in the expected format:', response.data);\n        }\n      }).catch(error => {\n        console.error('Error while fetching QMRA data:', error);\n      });\n    }\n  }, []);\n\n  // Function to calculate the average of all count values\n  const calculateAverage = () => {\n    const total = countValues.reduce((acc, value) => {\n      const parsedValue = parseFloat(value);\n      return isNaN(parsedValue) ? acc : acc + parsedValue;\n    }, 0);\n    return countValues.length > 0 ? total / countValues.length : 0;\n  };\n  useEffect(() => {\n    setAverage(calculateAverage());\n  }, [countValues]);\n  const handlePathogenClick = () => {\n    navigate('/Pathogen');\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/mstreference').then(response => {\n      console.log('API Response:', response.data);\n      const pathogenName = response.data.pathogenName;\n      setPathogenName(pathogenName);\n    }).catch(error => {\n      console.error('Error fetching mstreference:', error);\n    });\n  }, []);\n  const sendData = () => {\n    const data = {\n      pathogenName: Pathogen,\n      pathogenRes: 0\n    };\n\n    // Make a POST request to calculate pathogenResult using the fetched pathogenName\n    axios.post('http://localhost:3001/api/QRMAlevel3', data).then(response => {\n      const pathogenResult = response.data.results.pathogenResult;\n      setPathogenResult(pathogenResult);\n      openResultPopup();\n\n      //displayPathogenResult(pathogenResult);\n      console.error('parameters added successfully:', response);\n      setShowPopup(true);\n    }).catch(error => {\n      console.error('Error calculating pathogenResult:', error);\n    });\n  };\n  const closePop = () => {\n    setShowPopup(false);\n  };\n  let riskLevelBlock = null;\n  if (Math.round(pathogenResult) <= 0) {\n    riskLevelBlock = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Absence of faecal contamination  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          backgroundColor: 'green',\n          padding: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: \"LOW RISK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    riskLevelBlock = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-5\",\n        style: {\n          color: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Presence of faecal contamination  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          backgroundColor: 'red',\n          padding: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: \"VERY HIGH RISK \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"text-center \",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/CleaningEnglish2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              variant: \"outline-primary\",\n              className: \"show\",\n              children: \"SHOW METHODS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  const handleQMRAClick = () => {\n    navigate('/QMRASelect');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        className: \"bg-body-tertiary\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n            className: \"bg-body-tertiary\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n                href: \"#home\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  alt: \"\",\n                  src: \"images/SimraLogo.png\",\n                  width: \"60\",\n                  height: \"40\",\n                  className: \"d-inline-block align-left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 37\n                }, this), ' ', \"SIMRA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            className: \"justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(Navbar.Text, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          sm: 0,\n          md: 0,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            fluid: true,\n            className: \"side mt-5\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mt-2\",\n              style: {\n                backgroundColor: 'rgba(108, 117, 125, 0.5)',\n                height: '500px',\n                marginTop: '400px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  style: {\n                    width: '100%'\n                  },\n                  onClick: handleHomeNavigate,\n                  children: [/*#__PURE__*/_jsxDEV(FaHome, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 138\n                  }, this), \" Home\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  style: {\n                    width: '100%'\n                  },\n                  onClick: handlePathogenClick,\n                  children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 41\n                  }, this), \" PATHOGEN DATA\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  style: {\n                    width: '100%'\n                  },\n                  onClick: handleQMRAClick,\n                  children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 41\n                  }, this), \" QMRA\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      width: '85%',\n                      backgroundColor: 'black'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 117\n                    }, this), \" Logout\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 58\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 30,\n          sm: 8,\n          md: 6,\n          lg: 10,\n          style: {\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            backgroundAttachment: 'fixed',\n            filter: blur('25px')\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"mt-2 mb-5\",\n            style: {\n              background: 'rgba(255, 255, 255, 0.7)',\n              borderRadius: '30px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-5 mb-5\",\n              children: \"MICROBIAL SOURCE TRACKING DATA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"table-primary\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Count\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Makers\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Ratio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Reference Pathogen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Model\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: Array.from({\n                  length: rowCount\n                }).map((_, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      name: `count_${index + 1}`,\n                      value: countValues[index],\n                      onChange: event => {\n                        const updatedCountValues = [...countValues];\n                        updatedCountValues[index] = event.target.value;\n                        setCountValues(updatedCountValues);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      name: `indicator_${index + 1}`,\n                      onChange: handleIndicatorChange,\n                      value: Indicator,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--Select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cow\",\n                        children: \"Cow\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Human\",\n                        children: \"Human\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Dog\",\n                        children: \"Dog\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Pig\",\n                        children: \"Pig\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 502,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Chicken\",\n                        children: \"Chicken\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      type: \"text\",\n                      name: `other_indicator_${index + 1}`,\n                      style: {\n                        display: 'none'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      name: `ratio_${index + 1}`,\n                      value: Ratio,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--Select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0.66\",\n                        children: \"1:0.66\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1\",\n                        children: \"1:1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0.01\",\n                        children: \"1:0.01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0.8\",\n                        children: \"1:0.8\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 518,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"0.01\",\n                        children: \"1:0.01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 519,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      type: \"text\",\n                      name: `other_ratio_${index + 1}`,\n                      style: {\n                        display: 'none'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      name: `pathogen_${index + 1}`,\n                      onChange: handlePathogenChange,\n                      value: Pathogen,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--Select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Cryptosporidiumparvum\",\n                        children: \"Cryptosporidium parvum\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"EcoliO157H7\",\n                        children: \"E. coli O157:H7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Campylobacterjejuni\",\n                        children: \"Campylobacter jejuni\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Salmonellatyphi\",\n                        children: \"Salmonella typhi\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"SFlexneri\",\n                        children: \"S. Flexneri\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 534,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Vibriocholera\",\n                        children: \"Vibrio cholera\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Giardialamblia\",\n                        children: \"Giardia lambia\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Entamoebacoli\",\n                        children: \"Entamoeba coli\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      type: \"text\",\n                      name: `other_pathogen_${index + 1}`,\n                      style: {\n                        display: 'none'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      name: `model_${index + 1}`,\n                      value: Model,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"--Select--\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 548,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Beta-Poisson\",\n                        children: \"Beta-Poisson\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Exponential\",\n                        children: \"Exponential\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      type: \"text\",\n                      name: `other_model_${index + 1}`,\n                      style: {\n                        display: 'none'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 45\n                  }, this)]\n                }, index + 1, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn  mt-5\",\n              variant: \"primary\",\n              id: \"add-row-btn\",\n              style: {\n                background: 'rgba(108, 117, 125)',\n                width: '250px',\n                display: 'block',\n                margin: '0 auto',\n                color: 'white'\n              },\n              onClick: addRow,\n              children: \"Add Row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Average of Count : \", calculateAverage()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn mt-5 mb-5\",\n                id: \"calculateEstimatedCount\",\n                style: {\n                  background: 'rgba(108, 117, 125)',\n                  width: '250px',\n                  margin: '0 auto',\n                  color: 'white'\n                },\n                onClick: calculateEstimatedCount,\n                children: \"ESTIMATED COUNT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Popup, {\n                open: isPopupOpen,\n                closeOnDocumentClick: true,\n                onClose: closePopup,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popup-content text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Count Estimate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 41\n                  }, this), countEstimate !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"ESTIMATED COUNT : \", countEstimate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Results addedd successfully!!!!!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      color: 'black'\n                    },\n                    onClick: sendData,\n                    children: \"RUN QMRA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 37\n                }, this), showPopup && /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outline-primary\",\n                  className: \"scroll\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"custom-popup text-center\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"popup-content text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [\"THE SELECTED PATHOGEN NAME : \", Pathogen, \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 603,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [\"MST PROBABALITY OF INFECTION : \", pathogenResult, \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 604,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 602,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: closePop,\n                          className: \"close-button\",\n                          style: {\n                            color: 'black'\n                          },\n                          children: \"Close\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 607,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: riskLevelBlock\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/uvvziO6D6Dg4K4100hneA7Ucdk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","Table","Button","Form","Row","Col","Image","Navbar","Modal","useNavigate","FaFile","FaSignOutAlt","FaChartBar","FaHome","Link","axios","FormControl","Popup","backgroundImage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","rowCount","setRowCount","Count","setCount","Indicator","setIndicator","Pathogen","setPathogen","Model","setModel","Ratio","setRatio","maxId","setMaxId","countValues","setCountValues","selectedRatio","setSelectedRatio","average","setAverage","pathogenResult","setPathogenResult","showPopup","setShowPopup","infectionResult","setInfectionResult","selectedExposure","setSelectedExposure","pathogenName","setPathogenName","fetchMaxId","response","get","console","log","data","rows","lastId","error","isPopupOpen","setIsPopupOpen","isPopupResultsOpen","setIsisPopupResultsOpen","countEstimate","setCountEstimate","openPopup","closePopup","openResultPopup","closeResultPopup","indicatorRatios","Cow","Human","Dog","Pig","Chicken","pathogenModel","EcoliO157H7","Cryptosporidiumparvum","ExponCampylobacterjejuniential","Salmonellatyphi","SFlexneri","Vibriocholera","Entamoebacoli","Campylobacterjejuni","Giardialamblia","addRow","handleIndicatorChange","event","selectedIndicator","target","value","handlePathogenChange","selectedPathogen","closePopupAndRedirect","navigate","calculateEstimatedCount","some","count","calculatedRatio","estimatedCount","isNaN","parseFloat","firstRowValue","secondRowValue","selectedModel","GetModel","pathogen","calculateRatio","indicator","mstdata_names","count_mst","ratio_mst","count_estimate","samplingId","post","then","message","countAverage","catch","pathogenData","model","ratio","handleHomeNavigate","userId","localStorage","getItem","params","state","userName","setUserName","lastName","setLastName","qmraData","setQmraData","Array","isArray","results","length","user","userFirstName","firstname","userLastName","lastname","calculateAverage","total","reduce","acc","parsedValue","handlePathogenClick","sendData","pathogenRes","closePop","riskLevelBlock","Math","round","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","padding","color","Text","to","variant","handleQMRAClick","Toggle","Brand","href","alt","src","width","height","Collapse","xs","sm","md","lg","fluid","marginTop","Body","size","onClick","backgroundPosition","backgroundSize","backgroundRepeat","backgroundAttachment","filter","blur","background","borderRadius","striped","bordered","from","map","_","index","Control","type","name","onChange","updatedCountValues","as","display","class","id","margin","open","closeOnDocumentClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Thabang/Desktop/myapp/myapp/SIMRA-Web/src/Pages/MST/MST.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Card, Table, Button, Form, Row, Col, Image, Navbar } from 'react-bootstrap';\r\nimport Modal from 'react-modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaFile, FaSignOutAlt, FaChartBar, FaHome } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport Popup from 'reactjs-popup';\r\nimport './MST.css'\r\nimport backgroundImage from './back.jpg';\r\n\r\nfunction App() {\r\n    const [rowCount, setRowCount] = useState(1);\r\n    const [Count, setCount] = useState('');\r\n    const [Indicator, setIndicator] = useState({});\r\n    const [Pathogen, setPathogen] = useState('');\r\n    const [Model, setModel] = useState('');\r\n    const [Ratio, setRatio] = useState('');\r\n    const [maxId, setMaxId] = useState(null);\r\n    const [countValues, setCountValues] = useState(['']);\r\n    const [selectedRatio, setSelectedRatio] = useState(1);\r\n    const [average, setAverage] = useState(0);\r\n    const [pathogenResult, setPathogenResult] = useState(null);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [infectionResult, setInfectionResult] = useState('');\r\n    const [selectedExposure, setSelectedExposure] = useState('');\r\n    const [pathogenName, setPathogenName] = useState(null);\r\n\r\n    // Function to fetch the max ID\r\n    useEffect(() => {\r\n        const fetchMaxId = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/api/maxId');\r\n                console.log('API response:', response.data);\r\n                if (response.data.rows && response.data.rows[0] && response.data.rows[0].lastId) {\r\n                    setMaxId(response.data.rows[0].lastId);\r\n                } else {\r\n                    console.error('Max ID not found in the response.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error while fetching max ID:', error);\r\n            }\r\n        };\r\n        fetchMaxId();\r\n    }, []);\r\n    // State to control the display of the popup\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [isPopupResultsOpen, setIsisPopupResultsOpen] = useState(false);\r\n    // Define a new state variable to hold the count estimate from the database\r\n    const [countEstimate, setCountEstimate] = useState(null);\r\n    // Function to handle opening the popup\r\n    const openPopup = () => {\r\n        setIsPopupOpen(true);\r\n    };\r\n    // Function to handle closing the popup\r\n    const closePopup = () => {\r\n        setIsPopupOpen(false);\r\n    };\r\n    // Function to handle opening the popup\r\n    const openResultPopup = () => {\r\n        setIsisPopupResultsOpen(true);\r\n    };\r\n    // Function to handle closing the popup\r\n    const closeResultPopup = () => {\r\n        setIsisPopupResultsOpen(false);\r\n    };\r\n    // Mapping of indicators to ratios\r\n    const indicatorRatios = {\r\n        Cow: '0.66',\r\n        Human: '1',\r\n        Dog: '0.01',\r\n        Pig: '0.8',\r\n        Chicken: '0.01',\r\n    };\r\n    // Mapping of indicators to ratios\r\n    const pathogenModel = {\r\n        EcoliO157H7: 'Beta-Poisson',\r\n        Cryptosporidiumparvum: 'Exponential',\r\n        ExponCampylobacterjejuniential: 'Beta-Poisson',\r\n        Salmonellatyphi: 'Beta-Poisson',\r\n        SFlexneri: 'Beta-Poisson',\r\n        Vibriocholera: 'Beta-Poisson',\r\n        Entamoebacoli: 'Beta-Poisson',\r\n        Campylobacterjejuni: 'Beta-Poisson',\r\n        Giardialamblia: 'Exponential',\r\n    }\r\n    const addRow = () => {\r\n        setRowCount(rowCount + 1);\r\n        setCount('');\r\n        setCountValues([...countValues, '']);\r\n    };\r\n    // Function to handle indicator change and set the corresponding ratio\r\n    const handleIndicatorChange = (event) => {\r\n        const selectedIndicator = event.target.value;\r\n        setIndicator(selectedIndicator);\r\n        // Set the corresponding ratio based on the selected indicator\r\n\r\n        setRatio(indicatorRatios[selectedIndicator] || '');\r\n    };\r\n    // Function to handle indicator change and set the corresponding ratio\r\n    const handlePathogenChange = (event) => {\r\n        const selectedPathogen = event.target.value;\r\n        setPathogen(selectedPathogen);\r\n        // Set the corresponding ratio based on the selected indicator\r\n        setModel(pathogenModel[selectedPathogen] || '');\r\n    };\r\n    // Function to handle closing the popup and navigate to another page\r\n    const closePopupAndRedirect = () => {\r\n        setIsPopupOpen(false);\r\n        setIsisPopupResultsOpen(false);\r\n\r\n        // Use the navigate function to redirect to another page\r\n        navigate('/QMRARun');\r\n    };\r\n    // Function to calculate the estimated count\r\n    const calculateEstimatedCount = () => {\r\n      // Check if the required fields are selected\r\n      if (!Indicator || !Ratio || !Pathogen || !Model) {\r\n        // Display an error message or handle it as needed\r\n        console.error('Please select all required fields');\r\n        return;\r\n      }\r\n      // Check if all counts are provided\r\n      if (countValues.some(count => count === '')) {\r\n           \r\n        console.error('Please enter counts for all rows.');\r\n        return;\r\n    }\r\n        // Calculate the ratio based on the selected indicator\r\n        let calculatedRatio = 1;\r\n        if (Indicator === 'Cow') {\r\n            calculatedRatio = 0.66;\r\n        } else if (Indicator === 'Human') {\r\n            calculatedRatio = 1;\r\n        } else if (Indicator === 'Dog') {\r\n            calculatedRatio = 0.01;\r\n        } else if (Indicator === 'Pig') {\r\n            calculatedRatio = 0.8;\r\n        }\r\n        else if (Indicator === 'Chicken') {\r\n            calculatedRatio = 0.01;\r\n        }\r\n        const estimatedCount = average * calculatedRatio;\r\n        setCountEstimate(estimatedCount);\r\n        // If no rows are added, use the first count as the value\r\n        if (rowCount === 1 && !isNaN(parseFloat(countValues[0]))) {\r\n            const firstRowValue = parseFloat(countValues[0]);\r\n            const estimatedCount = firstRowValue * calculatedRatio;\r\n            setCountEstimate(estimatedCount);\r\n            // Open the popup to display the result\r\n            openPopup();\r\n            openResultPopup();\r\n        } else {\r\n            // Calculate the average based on the values in countValues array\r\n            const firstRowValue = parseFloat(countValues[0]);\r\n            const secondRowValue = parseFloat(countValues[1]);\r\n\r\n            if (!isNaN(firstRowValue) && !isNaN(secondRowValue)) {\r\n                const average = (firstRowValue + secondRowValue) / 2;\r\n                // Set the countEstimate state using the calculated average and selected ratio\r\n                setCountEstimate(average * calculatedRatio);\r\n                // Open the popup to display the result\r\n                openPopup();\r\n                openResultPopup();\r\n            }\r\n        }\r\n        const selectedRatio = indicatorRatios[Indicator];\r\n        //\r\n        const selectedModel = pathogenModel[Pathogen];\r\n        //\r\n        const GetModel = (pathogen) => {\r\n            if (pathogen === \"Cryptosporidiumparvum\") {\r\n                return 'exponential';\r\n            } else if (pathogen === \"EcoliO157H7\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Campylobacterjejuni\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Salmonellatyphi\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"SFlexneri\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Vibrioholera\") {\r\n                return 'beta-poisson';\r\n            } else if (pathogen === \"Giardialamblia\") {\r\n                return 'exponential';\r\n            } else if (pathogen === \"Entamoebacoli\") {\r\n                return 'beta-poisson';\r\n            } else {\r\n                return '';\r\n            }\r\n        };\r\n        const calculateRatio = (indicator) => {\r\n            if (indicator === \"Cow\") {\r\n                return 0.66;\r\n            } else if (indicator === \"Human\") {\r\n                return 1;\r\n            } else if (indicator === \"Dog\") {\r\n                return 0.01;\r\n            } else if (indicator === \"Pig\") {\r\n                return 0.8;\r\n            } else if (indicator === \"Chicken\") {\r\n                return 0.01;\r\n            } else {\r\n                return 1;\r\n            }\r\n        };\r\n\r\n        const data = {\r\n            mstdata_names: Indicator,\r\n            count_mst: average,\r\n            ratio_mst: selectedRatio,\r\n            count_estimate: 0,\r\n            samplingId: maxId,\r\n        }\r\n        axios.post('http://localhost:3001/api/mstEstimate', data)\r\n            .then((response) => {\r\n                if (response.data.message === \"added MST\") {\r\n                    // Update the countEstimate state with the value from the API response\r\n                    setCountEstimate(response.data.countAverage);\r\n                    // Open the popup to display the result\r\n                    openPopup();\r\n\r\n                } else {\r\n                    console.error('MST : ', response.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error while making the API request:', error);\r\n            });\r\n        const pathogenData = {\r\n            pathogenName: Pathogen,\r\n            model: Model,\r\n        }\r\n        openResultPopup();\r\n        // Calculate the ratio based on the selected indicator\r\n        data.ratio = calculateRatio(Indicator);\r\n        data.model = GetModel(Pathogen);\r\n\r\n        axios.post('http://localhost:3001/api/mstreference', pathogenData)\r\n            .then((response) => {\r\n                if (response.data.message === \"added mstreference\") {\r\n                } else {\r\n                    console.error('mstreference:', response.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error while making the API request:', error);\r\n            });\r\n    };\r\n    const navigate = useNavigate();\r\n    const handleHomeNavigate = () => {\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        if (userId) {\r\n            // Make an HTTP request to fetch data based on the user ID if needed\r\n            axios.get('http://localhost:3001/api/QMRA', {\r\n                params: {\r\n                    userId: userId,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    // Handle the response if needed\r\n                    console.log(response.data);\r\n                    navigate('/Level3', { state: { userId: userId } });\r\n                })\r\n                .catch((error) => {\r\n                    // Handle any errors\r\n                    console.error(error);\r\n                });\r\n        } else {\r\n            // Handle the case where the user ID is not found in localStorage\r\n            console.error('User ID not found in localStorage');\r\n        }\r\n    };\r\n    const [userName, setUserName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [qmraData, setQmraData] = useState([]);\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId');\r\n        if (userId) {\r\n            axios\r\n                .get('http://localhost:3001/api/theuser', {\r\n                    params: {\r\n                        userId: userId,\r\n                    },\r\n                })\r\n                .then(response => {\r\n                    if (response.data && Array.isArray(response.data.results)) {\r\n                        // Check if the response data is an array\r\n                        if (response.data.results.length > 0) {\r\n                            const user = response.data.results[0]; // Assuming there's only one user\r\n                            const userFirstName = user.firstname;\r\n                            const userLastName = user.lastname;\r\n                            setUserName(userFirstName);\r\n                            setLastName(userLastName);\r\n                            console.log('lastname', userLastName);\r\n                        } else {\r\n                            console.error('No user data found for the given user ID.');\r\n                        }\r\n                    } else {\r\n                        console.error('API response is not in the expected format:', response.data);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error while fetching QMRA data:', error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    // Function to calculate the average of all count values\r\n    const calculateAverage = () => {\r\n\r\n        const total = countValues.reduce((acc, value) => {\r\n            const parsedValue = parseFloat(value);\r\n            return isNaN(parsedValue) ? acc : acc + parsedValue;\r\n        }, 0);\r\n        return countValues.length > 0 ? total / countValues.length : 0;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setAverage(calculateAverage());\r\n    }, [countValues]);\r\n\r\n    const handlePathogenClick = () => {\r\n        navigate('/Pathogen');\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/api/mstreference')\r\n            .then((response) => {\r\n                console.log('API Response:', response.data);\r\n                const pathogenName = response.data.pathogenName;\r\n                setPathogenName(pathogenName);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching mstreference:', error);\r\n            });\r\n\r\n    }, []);\r\n\r\n    const sendData = () => {\r\n        const data = {\r\n            pathogenName: Pathogen,\r\n            pathogenRes: 0,\r\n        }\r\n\r\n\r\n        // Make a POST request to calculate pathogenResult using the fetched pathogenName\r\n        axios.post('http://localhost:3001/api/QRMAlevel3', data)\r\n            .then((response) => {\r\n                const pathogenResult = response.data.results.pathogenResult;\r\n                setPathogenResult(pathogenResult);\r\n                openResultPopup();\r\n\r\n\r\n                //displayPathogenResult(pathogenResult);\r\n                console.error('parameters added successfully:', response);\r\n\r\n\r\n                setShowPopup(true);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error calculating pathogenResult:', error);\r\n            });\r\n\r\n    }\r\n\r\n    const closePop = () => {\r\n        setShowPopup(false);\r\n    };\r\n\r\n    let riskLevelBlock = null;\r\n    if (Math.round(pathogenResult) <= 0) {\r\n        riskLevelBlock = (\r\n            <>\r\n                <div className='text-center mb-5'>\r\n                    <h3>Absence of faecal contamination  </h3>\r\n\r\n                </div>\r\n\r\n                <div className='text-center' style={{ backgroundColor: 'green', padding: '15px' }}>\r\n\r\n                    <span style={{ color: 'black' }}>LOW RISK</span>\r\n                </div>\r\n                <div className=\"text-center\">\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        riskLevelBlock = (\r\n            <>\r\n                <div className='text-center mb-5' style={{ color: 'red' }}>\r\n                    <h3>Presence of faecal contamination  </h3>\r\n                </div>\r\n                <div className='text-center' style={{ backgroundColor: 'red', padding: '5px' }}>\r\n                    <span style={{ color: 'black' }}>VERY HIGH RISK </span>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Card.Text className=\"text-center \">\r\n\r\n                        <Link to=\"/CleaningEnglish2\"><button variant=\"outline-primary\" className='show' >SHOW METHODS</button></Link>\r\n                    </Card.Text>\r\n                </div></>\r\n        );\r\n    }\r\n    const handleQMRAClick = () => {\r\n        navigate('/QMRASelect');\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=''  >\r\n\r\n\r\n            <div className=\"App\" >\r\n                <Navbar className=\"bg-body-tertiary\">\r\n                    <Container>\r\n                        <Navbar.Toggle />\r\n                        <Navbar className=\"bg-body-tertiary\">\r\n                            <Container>\r\n                                <Navbar.Brand href=\"#home\" >\r\n                                    <Image\r\n                                        alt=\"\"\r\n                                        src=\"images/SimraLogo.png\"\r\n                                        width=\"60\"\r\n                                        height=\"40\"\r\n                                        className=\"d-inline-block align-left\"\r\n                                    />{' '}\r\n                                    SIMRA\r\n                                </Navbar.Brand>\r\n                            </Container>\r\n                        </Navbar>\r\n                    </Container>\r\n                    <Container>\r\n                        <Navbar.Toggle />\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <Navbar.Text>\r\n\r\n                            </Navbar.Text>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                <Row>\r\n                    <Col xs={6} sm={0} md={0} lg={2} >\r\n                        <Container fluid className=\"side mt-5\" >\r\n                            <Card className='mt-2' style={{ backgroundColor: 'rgba(108, 117, 125, 0.5)', height: '500px', marginTop: '400px' }}>\r\n                                <Card.Body ><Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} onClick={handleHomeNavigate}><FaHome /> Home</Button></Card.Body>\r\n                                <Card.Body>\r\n                                    <Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} onClick={handlePathogenClick}>\r\n                                        <FaChartBar /> PATHOGEN DATA\r\n                                    </Button>\r\n                                </Card.Body>\r\n                                <Card.Body>\r\n                                    <Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} onClick={handleQMRAClick}>\r\n                                        <FaChartBar /> QMRA\r\n                                    </Button>\r\n                                </Card.Body>\r\n\r\n                                <Card.Body><Link to=\"/\"> <Button style={{ width: '85%', backgroundColor: 'black' }}><FaSignOutAlt /> Logout</Button></Link></Card.Body>\r\n\r\n                            </Card>\r\n                        </Container>\r\n                    </Col>\r\n                    <Col xs={30} sm={8} md={6} lg={10} style={{ backgroundImage: `url(${backgroundImage})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', backgroundAttachment: 'fixed', filter: blur('25px') }}>\r\n                        <Container className=\"mt-2 mb-5\" style={{ background: 'rgba(255, 255, 255, 0.7)', borderRadius: '30px' }} >\r\n                            <h4 className=\"mt-5 mb-5\" >MICROBIAL SOURCE TRACKING DATA</h4>\r\n                            <Table striped bordered >\r\n                                <thead className=\"table-primary\">\r\n                                    <tr>\r\n                                        <th>Count</th>\r\n                                        <th>Makers</th>\r\n                                        <th>Ratio</th>\r\n                                        <th>Reference Pathogen</th>\r\n                                        <th>Model</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Array.from({ length: rowCount }).map((_, index) => (\r\n                                        <tr key={index + 1}>\r\n                                            <td>\r\n                                                <Form.Control type=\"text\" name={`count_${index + 1}`} value={countValues[index]}\r\n                                                    onChange={(event) => {\r\n                                                        const updatedCountValues = [...countValues];\r\n                                                        updatedCountValues[index] = event.target.value;\r\n                                                        setCountValues(updatedCountValues);\r\n                                                    }} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Form.Control as=\"select\" name={`indicator_${index + 1}`} onChange={handleIndicatorChange} value={Indicator} >\r\n                                                    <option value=\"\">--Select--</option>\r\n                                                    <option value=\"Cow\">Cow</option>\r\n                                                    <option value=\"Human\">Human</option>\r\n                                                    <option value=\"Dog\">Dog</option>\r\n                                                    <option value=\"Pig\">Pig</option>\r\n                                                    <option value=\"Chicken\">Chicken</option>\r\n\r\n                                                </Form.Control>\r\n                                                <FormControl\r\n                                                    type=\"text\"\r\n                                                    name={`other_indicator_${index + 1}`}\r\n                                                    style={{ display: 'none' }}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Form.Control as=\"select\" name={`ratio_${index + 1}`} value={Ratio}>\r\n                                                    <option value=\"\">--Select--</option>\r\n                                                    <option value=\"0.66\">1:0.66</option>\r\n                                                    <option value=\"1\">1:1</option>\r\n                                                    <option value=\"0.01\">1:0.01</option>\r\n                                                    <option value=\"0.8\">1:0.8</option>\r\n                                                    <option value=\"0.01\">1:0.01</option>\r\n                                                </Form.Control>\r\n                                                <FormControl\r\n                                                    type=\"text\"\r\n                                                    name={`other_ratio_${index + 1}`}\r\n                                                    style={{ display: 'none' }}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Form.Control as=\"select\" name={`pathogen_${index + 1}`} onChange={handlePathogenChange} value={Pathogen}>\r\n                                                    <option value=\"\">--Select--</option>\r\n                                                    <option value=\"Cryptosporidiumparvum\">Cryptosporidium parvum</option>\r\n                                                    <option value=\"EcoliO157H7\">E. coli O157:H7</option>\r\n                                                    <option value=\"Campylobacterjejuni\">Campylobacter jejuni</option>\r\n                                                    <option value=\"Salmonellatyphi\">Salmonella typhi</option>\r\n                                                    <option value=\"SFlexneri\">S. Flexneri</option>\r\n                                                    <option value=\"Vibriocholera\">Vibrio cholera</option>\r\n                                                    <option value=\"Giardialamblia\">Giardia lambia</option>\r\n                                                    <option value=\"Entamoebacoli\">Entamoeba coli</option>\r\n\r\n                                                </Form.Control>\r\n                                                <FormControl\r\n                                                    type=\"text\"\r\n                                                    name={`other_pathogen_${index + 1}`}\r\n                                                    style={{ display: 'none' }}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Form.Control as=\"select\" name={`model_${index + 1}`} value={Model}>\r\n                                                    <option value=\"\">--Select--</option>\r\n                                                    <option value=\"Beta-Poisson\">Beta-Poisson</option>\r\n                                                    <option value=\"Exponential\">Exponential</option>\r\n                                                </Form.Control>\r\n                                                <FormControl\r\n                                                    type=\"text\"\r\n                                                    name={`other_model_${index + 1}`}\r\n                                                    style={{ display: 'none' }}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <button class=\"btn  mt-5\" variant=\"primary\" id=\"add-row-btn\" style={{\r\n                                background: 'rgba(108, 117, 125)',\r\n                                width: '250px',\r\n                                display: 'block',\r\n                                margin: '0 auto',\r\n                                color: 'white',\r\n                            }} onClick={addRow}>\r\n                                Add Row\r\n                            </button>\r\n                            <div className='mt-5'>\r\n                                <p>Average of Count : {calculateAverage()}</p>\r\n                            </div>\r\n                            <div className='mb-5'>\r\n                                <button className=\"btn mt-5 mb-5\" id=\"calculateEstimatedCount\" style={{\r\n                                    background: 'rgba(108, 117, 125)',\r\n                                    width: '250px',\r\n\r\n                                    margin: '0 auto',\r\n                                    color: 'white',\r\n\r\n                                }} onClick={calculateEstimatedCount} >\r\n                                    ESTIMATED COUNT\r\n                                </button>\r\n                                <Popup open={isPopupOpen} closeOnDocumentClick onClose={closePopup}>\r\n                                    <div className=\"popup-content text-center\">\r\n                                        <h2>Count Estimate</h2>\r\n                                        {countEstimate !== null && (\r\n                                            <p>ESTIMATED COUNT : {countEstimate}</p>\r\n                                        )}\r\n                                        <p>Results addedd successfully!!!!!</p>\r\n                                        <button style={{ color: 'black' }} onClick={sendData}>RUN QMRA</button>\r\n                                    </div>\r\n\r\n\r\n                                    {showPopup && (\r\n                                        <Card variant=\"outline-primary\" className='scroll'>\r\n                                            <Card.Text>\r\n                                                <div className=\"custom-popup text-center\">\r\n                                                    <div className=\"popup-content text-center\">\r\n\r\n                                                        <div>\r\n                                                            <p>THE SELECTED PATHOGEN NAME : {Pathogen} </p>\r\n                                                            <p>MST PROBABALITY OF INFECTION : {pathogenResult} </p>\r\n                                                        </div>\r\n\r\n                                                        <button onClick={closePop} className=\"close-button\" style={{ color: 'black' }}>\r\n                                                            Close\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </Card.Text>\r\n                                            <Card.Text>{riskLevelBlock}</Card.Text>\r\n\r\n\r\n\r\n\r\n                                        </Card>\r\n\r\n                                    )}\r\n                                </Popup>\r\n                            </div>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}