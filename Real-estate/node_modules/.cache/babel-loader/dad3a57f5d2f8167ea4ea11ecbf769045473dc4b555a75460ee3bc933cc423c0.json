{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thabang\\\\Desktop\\\\myapp\\\\myapp\\\\SIMRA-Web\\\\src\\\\Pages\\\\Files\\\\H2SReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Card, Form, Row, Col, Image, Stack, Navbar, Carousel } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { FaQuestionCircle, FaVideo, FaSignOutAlt, FaHome } from 'react-icons/fa';\nimport { IoWaterOutline } from 'react-icons/io5';\nimport './report.css';\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport Survey from '../Survey/Survey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SurveyReport() {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [qmraData, setQmraData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      axios.get('http://localhost:3001/api/theuser', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        if (response.data && Array.isArray(response.data.results)) {\n          // Check if the response data is an array\n          if (response.data.results.length > 0) {\n            const user = response.data.results[0]; // Assuming there's only one user\n            const userFirstName = user.firstname;\n            const userLastName = user.lastname;\n            setUserName(userFirstName);\n            setLastName(userLastName);\n            console.log('lastname', userLastName);\n          } else {\n            console.error('No user data found for the given user ID.');\n          }\n        } else {\n          console.error('API response is not in the expected format:', response.data);\n        }\n      }).catch(error => {\n        console.error('Error while fetching QMRA data:', error);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      axios.get('http://localhost:3001/api/fileH2S', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        if (Array.isArray(response.data.results)) {\n          // Check if the response data is an array\n          setTableData(response.data.results);\n        } else {\n          console.error('H2S data is not in the expected format:', response.data);\n        }\n      }).catch(error => {\n        console.error('Error while fetching H2S data:', error);\n      });\n    }\n  }, []);\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const generatePDF = () => {\n    if (!startDate || !endDate || !tableData) {\n      setErrorMessage('Please provide both start and end dates.');\n      return;\n    }\n    const filteredData = tableData.filter(row => {\n      const rowDate = new Date(row.sampling_date_created);\n      console.log('Row Date:', rowDate);\n      console.log('Start Date:', new Date(startDate));\n      console.log('End Date:', new Date(endDate));\n      return rowDate >= new Date(startDate) && rowDate <= new Date(endDate);\n    });\n    const doc = new jsPDF();\n\n    // Define the columns and data for the PDF table\n    const columns = [{\n      title: 'Municipality',\n      key: 'muni_name'\n    }, {\n      title: 'NameOfWaterTreat',\n      key: 'waterSourceType'\n    }, {\n      title: 'Latitude',\n      key: 'latitude'\n    }, {\n      title: 'Longitude',\n      key: 'longitude'\n    }, {\n      title: 'SampleID',\n      key: 'samplingId'\n    }, {\n      title: 'SamplingDate',\n      key: 'sampling_date_created'\n    }, {\n      title: 'Prasence/Absence',\n      key: 'pitLatrine'\n    }, {\n      title: 'Risk/noRisk',\n      key: 'risk_type'\n    }];\n\n    // Adjust the filter as needed\n    const data = filteredData.map(row => ({\n      muni_name: row.muni_name,\n      waterSourceType: row.waterSourceType,\n      latitude: row.latitude,\n      longitude: row.longitude,\n      samplingId: row.samplingId,\n      sampling_date_created: formatDate(row.sampling_date_created),\n      pitLatrine: row.status,\n      risk_type: row.risk_type\n    }));\n\n    // Set the table location, columns, and data\n    doc.autoTable({\n      head: [columns.map(col => col.title)],\n      body: data.map(row => columns.map(col => row[col.key])),\n      startY: 20 // Adjust the Y position as needed\n    });\n\n    // Save the PDF\n    doc.save('H2S.pdf');\n  };\n  const exportToExcel = () => {\n    if (!startDate || !endDate || !tableData) {\n      setErrorMessage('Please provide both start and end dates.');\n      return;\n    }\n    const filteredData = tableData.filter(row => {\n      const rowDate = new Date(row.sampling_date_created);\n      return rowDate >= new Date(startDate) && rowDate <= new Date(endDate);\n    });\n    const dataForExcel = filteredData.map(row => ({\n      Municipality: row.muni_name,\n      NameOfWaterTreat: row.waterSourceType,\n      Latitude: row.latitude,\n      Longitude: row.longitude,\n      SampleID: row.samplingId,\n      SamplingDate: formatDate(row.sampling_date_created),\n      'Prasence/Absence': row.status,\n      'Risk/noRisk': row.risk_type\n    }));\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, {\n      header: ['Municipality', 'NameOfWaterTreat', 'Latitude', 'Longitude', 'SampleID', 'SamplingDate', 'Prasence/Absence', 'Risk/noRisk']\n    });\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'AllSeasonData');\n    const dataURL = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'base64'\n    });\n    const blob = new Blob([s2ab(atob(dataURL))], {\n      type: 'application/octet-stream'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'H2S.xlsx';\n    a.click();\n  };\n  function s2ab(s) {\n    const buf = new ArrayBuffer(s.length);\n    const view = new Uint8Array(buf);\n    for (let i = 0; i < s.length; i++) {\n      view[i] = s.charCodeAt(i) & 0xff;\n    }\n    return buf;\n  }\n  const handleStartDateChange = e => {\n    setStartDate(e.target.value);\n    // Clear the error message when the user changes the start date\n    setErrorMessage('');\n  };\n  const handleEndDateChange = e => {\n    setEndDate(e.target.value);\n    // Clear the error message when the user changes the end date\n    setErrorMessage('');\n  };\n  const handleHomeNavigate = () => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      // Make an HTTP request to fetch data based on the user ID if needed\n      axios.get('http://localhost:3001/api/QMRA', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        // Handle the response if needed\n        console.log(response.data);\n        navigate('/Home', {\n          state: {\n            userId: userId\n          }\n        });\n      }).catch(error => {\n        // Handle any errors\n        console.error(error);\n      });\n    } else {\n      // Handle the case where the user ID is not found in localStorage\n      console.error('User ID not found in localStorage');\n    }\n  };\n  const hasDataToDisplay = tableData && tableData.length > 0;\n  const hasWetSeasonData = tableData && tableData.some(row => row.weatherCondition === 'Wet');\n  const hasDrySeasonData = tableData && tableData.some(row => row.weatherCondition !== 'Wet');\n  const filteredData = tableData.filter(row => row.samplingId !== null && row.samplingId !== undefined && row.samplingId !== '' && row.muni_name !== null && row.risk_type !== null && row.risk_type !== undefined && row.risk_type !== '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"bg-body-tertiary\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n          className: \"bg-body-tertiary\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n              href: \"#home\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                alt: \"\",\n                src: \"images/SimraLogo.png\",\n                width: \"60\",\n                height: \"40\",\n                className: \"d-inline-block align-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this), ' ', \"SIMRA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Navbar.Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        sm: 0,\n        md: 0,\n        lg: 2,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          className: \"side\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: 'rgba(108, 117, 125, 0.5)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                size: \"lg\",\n                style: {\n                  width: '100%'\n                },\n                onClick: handleHomeNavigate,\n                children: [/*#__PURE__*/_jsxDEV(FaHome, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 138\n                }, this), \" Home\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Survey\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  style: {\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaQuestionCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 128\n                  }, this), \" Survey\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 64\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/H2S\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  style: {\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IoWaterOutline, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 125\n                  }, this), \" H2S\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Video\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  size: \"lg\",\n                  style: {\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaVideo, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 127\n                  }, this), \" Video\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    width: '85%',\n                    backgroundColor: 'black'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 117\n                  }, this), \" Logout\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 30,\n        sm: 8,\n        md: 6,\n        lg: 10,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            fluid: true,\n            children: hasDataToDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  background: 'rgba(255, 255, 255)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"H2S Report\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: \"Dry Season\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 41\n                }, this), hasDrySeasonData ? filteredData.filter(row => row.weatherCondition !== 'Wet').length > 0 ? /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"scroll\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      class: \"table table-striped table-sticky\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            colspan: \"5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 325,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            colspan: \"3\",\n                            children: \"Cycle 1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 326,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Municipality\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 330,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"NameOfWaterTreat\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 331,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Latitude\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 332,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Longitude\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 333,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"SampleID\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 334,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"SamplingDate\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 335,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Prasence/Absence\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 336,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Risk/noRisk\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 329,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: filteredData.filter(row => row.weatherCondition !== 'Wet').map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.muni_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.waterSourceType\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 348,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.latitude\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 349,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.longitude\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 350,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.samplingId\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 351,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: formatDate(row.sampling_date_created)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 352,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.status\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 353,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.risk_type\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 354,\n                            columnNumber: 73\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"nodata-text\",\n                  children: \"No Report for Dry Season\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 49\n                }, this) // Display this when there is no data\n                : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"nodata-text\",\n                  children: \"No Report for Dry Season\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 45\n                }, this) // Display this when there is no data\n                , /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: \"Wet Season\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 41\n                }, this), hasWetSeasonData ? filteredData.filter(row => row.weatherCondition === 'Wet').length > 0 ? /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"scroll\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      class: \"table table-striped table-sticky\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            colspan: \"5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 377,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            colspan: \"3\",\n                            children: \"Cycle 1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 378,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Municipality\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 382,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"NameOfWaterTreat\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 383,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Latitude\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 384,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Longitude\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 385,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"SampleID\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 386,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"SamplingDate\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Prasence/Absence\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 388,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Risk/noRisk\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 389,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 381,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: filteredData.filter(row => row.weatherCondition === 'Wet').map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.muni_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 399,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.waterSourceType\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 400,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.latitude\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 401,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.longitude\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 402,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.samplingId\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 403,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: formatDate(row.sampling_date_created)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 404,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.status\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 405,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: row.risk_type\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 406,\n                            columnNumber: 73\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 398,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"nodata-text\",\n                  children: \"No Report for Wet Season\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 49\n                }, this) // Display this when there is no data\n                : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"nodata-text\",\n                  children: \"No Report for Wet Season\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 45\n                }, this) // Display this when there is no data\n                , /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Start Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"date\",\n                      value: startDate,\n                      onChange: handleStartDateChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"End Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"date\",\n                      value: endDate,\n                      onChange: handleEndDateChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [\" \", errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-danger\",\n                      children: errorMessage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 74\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: exportToExcel,\n                      children: \"Download Excel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: generatePDF,\n                      children: \"Download PDF\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nodata-text\",\n              children: \"No H2S Reports Are Avaliable For Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n}\n_s(SurveyReport, \"kUKaHbcKgy4mMRqHfTCsi5OPvbo=\", false, function () {\n  return [useNavigate];\n});\n_c = SurveyReport;\nexport default SurveyReport;\nvar _c;\n$RefreshReg$(_c, \"SurveyReport\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","Card","Form","Row","Col","Image","Stack","Navbar","Carousel","Link","useNavigate","FaQuestionCircle","FaVideo","FaSignOutAlt","FaHome","IoWaterOutline","axios","jsPDF","XLSX","Survey","jsxDEV","_jsxDEV","SurveyReport","_s","tableData","setTableData","startDate","setStartDate","endDate","setEndDate","errorMessage","setErrorMessage","userName","setUserName","lastName","setLastName","qmraData","setQmraData","navigate","userId","localStorage","getItem","get","params","then","response","data","Array","isArray","results","length","user","userFirstName","firstname","userLastName","lastname","console","log","error","catch","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","generatePDF","filteredData","filter","row","rowDate","sampling_date_created","doc","columns","title","key","map","muni_name","waterSourceType","latitude","longitude","samplingId","pitLatrine","status","risk_type","autoTable","head","col","body","startY","save","exportToExcel","dataForExcel","Municipality","NameOfWaterTreat","Latitude","Longitude","SampleID","SamplingDate","ws","utils","json_to_sheet","header","wb","book_new","book_append_sheet","dataURL","write","bookType","type","blob","Blob","s2ab","atob","url","URL","createObjectURL","a","document","createElement","href","download","click","s","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","handleStartDateChange","e","target","value","handleEndDateChange","handleHomeNavigate","state","hasDataToDisplay","hasWetSeasonData","some","weatherCondition","hasDrySeasonData","className","children","Toggle","fileName","_jsxFileName","lineNumber","columnNumber","Brand","alt","src","width","height","Collapse","Text","xs","sm","md","lg","fluid","style","backgroundColor","Body","variant","size","onClick","to","background","class","colspan","index","Group","Label","Control","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Thabang/Desktop/myapp/myapp/SIMRA-Web/src/Pages/Files/H2SReport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Container, Card, Form, Row, Col, Image, Stack, Navbar, Carousel } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaQuestionCircle, FaVideo, FaSignOutAlt, FaHome } from 'react-icons/fa';\r\nimport { IoWaterOutline } from 'react-icons/io5';\r\nimport './report.css';\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport Survey from '../Survey/Survey';\r\n\r\n\r\nfunction SurveyReport() {\r\n\r\n    const [tableData, setTableData] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [qmraData, setQmraData] = useState([]);\r\n    const navigate = useNavigate();\r\n       \r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId');\r\n    \r\n        if (userId) {\r\n            axios\r\n                .get('http://localhost:3001/api/theuser', {\r\n                    params: {\r\n                        userId: userId,\r\n                    },\r\n                })\r\n                .then(response => {\r\n                    if (response.data && Array.isArray(response.data.results)) {\r\n                        // Check if the response data is an array\r\n                        if (response.data.results.length > 0) {\r\n                            const user = response.data.results[0]; // Assuming there's only one user\r\n                            const userFirstName = user.firstname;\r\n                            const userLastName = user.lastname;\r\n                            setUserName(userFirstName);\r\n                            setLastName(userLastName);\r\n                            console.log('lastname', userLastName);\r\n                        } else {\r\n                            console.error('No user data found for the given user ID.');\r\n                        }\r\n                    } else {\r\n                        console.error('API response is not in the expected format:', response.data);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error while fetching QMRA data:', error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId');\r\n\r\n    \r\n        if (userId) {\r\n          axios\r\n            .get('http://localhost:3001/api/fileH2S', {\r\n              params: {\r\n                userId: userId,\r\n              },\r\n            })\r\n            .then(response => {\r\n                if (Array.isArray(response.data.results)) {\r\n                  // Check if the response data is an array\r\n                  setTableData(response.data.results);\r\n\r\n                  \r\n\r\n                } else {\r\n                  console.error('H2S data is not in the expected format:', response.data);\r\n                }\r\n              })\r\n            .catch(error => {\r\n              console.error('Error while fetching H2S data:', error);\r\n            });\r\n        }\r\n      }, []);\r\n\r\n    const formatDate = (dateString) => {\r\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    };\r\n\r\n    const generatePDF = () => {\r\n\r\n        if (!startDate || !endDate || !tableData) {\r\n            setErrorMessage('Please provide both start and end dates.');\r\n            return;\r\n        }\r\n\r\n        const filteredData = tableData.filter((row) => {\r\n            const rowDate = new Date(row.sampling_date_created);\r\n            console.log('Row Date:', rowDate);\r\n            console.log('Start Date:', new Date(startDate));\r\n            console.log('End Date:', new Date(endDate));\r\n            return rowDate >= new Date(startDate) && rowDate <= new Date(endDate);\r\n        });\r\n\r\n        const doc = new jsPDF();\r\n\r\n        // Define the columns and data for the PDF table\r\n        const columns = [\r\n            { title: 'Municipality', key: 'muni_name' },\r\n            { title: 'NameOfWaterTreat', key: 'waterSourceType' },\r\n            { title: 'Latitude', key: 'latitude' },\r\n            { title: 'Longitude', key: 'longitude' },\r\n            { title: 'SampleID', key: 'samplingId' },\r\n            { title: 'SamplingDate', key: 'sampling_date_created' },\r\n            { title: 'Prasence/Absence', key: 'pitLatrine' },\r\n            { title: 'Risk/noRisk', key: 'risk_type' },\r\n\r\n        ];\r\n\r\n\r\n        // Adjust the filter as needed\r\n        const data = filteredData.map((row) => ({\r\n            muni_name: row.muni_name,\r\n            waterSourceType: row.waterSourceType,\r\n            latitude: row.latitude,\r\n            longitude: row.longitude,\r\n            samplingId: row.samplingId,\r\n            sampling_date_created: formatDate(row.sampling_date_created),\r\n            pitLatrine: row.status,\r\n            risk_type: row.risk_type,\r\n        }));\r\n\r\n        // Set the table location, columns, and data\r\n        doc.autoTable({\r\n            head: [columns.map((col) => col.title)],\r\n            body: data.map((row) => columns.map((col) => row[col.key])),\r\n            startY: 20, // Adjust the Y position as needed\r\n        });\r\n\r\n        // Save the PDF\r\n        doc.save('H2S.pdf');\r\n    };\r\n\r\n\r\n    const exportToExcel = () => {\r\n\r\n        if (!startDate || !endDate || !tableData) {\r\n            setErrorMessage('Please provide both start and end dates.');\r\n            return;\r\n        }\r\n\r\n        const filteredData = tableData.filter((row) => {\r\n            const rowDate = new Date(row.sampling_date_created);\r\n            return rowDate >= new Date(startDate) && rowDate <= new Date(endDate);\r\n        });\r\n\r\n        const dataForExcel = filteredData.map((row) => ({\r\n            Municipality: row.muni_name,\r\n            NameOfWaterTreat: row.waterSourceType,\r\n            Latitude: row.latitude,\r\n            Longitude: row.longitude,\r\n            SampleID: row.samplingId,\r\n            SamplingDate: formatDate(row.sampling_date_created),\r\n            'Prasence/Absence': row.status,\r\n            'Risk/noRisk': row.risk_type,\r\n        }));\r\n\r\n        const ws = XLSX.utils.json_to_sheet(dataForExcel, {\r\n            header: [\r\n                'Municipality',\r\n                'NameOfWaterTreat',\r\n                'Latitude',\r\n                'Longitude',\r\n                'SampleID',\r\n                'SamplingDate',\r\n                'Prasence/Absence',\r\n                'Risk/noRisk',\r\n\r\n            ],\r\n        });\r\n\r\n\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'AllSeasonData');\r\n\r\n        const dataURL = XLSX.write(wb, { bookType: 'xlsx', type: 'base64' });\r\n\r\n        const blob = new Blob([s2ab(atob(dataURL))], { type: 'application/octet-stream' });\r\n\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'H2S.xlsx';\r\n        a.click();\r\n    };\r\n\r\n\r\n    function s2ab(s) {\r\n        const buf = new ArrayBuffer(s.length);\r\n        const view = new Uint8Array(buf);\r\n        for (let i = 0; i < s.length; i++) {\r\n            view[i] = s.charCodeAt(i) & 0xff;\r\n        }\r\n        return buf;\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e.target.value);\r\n        // Clear the error message when the user changes the start date\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e.target.value);\r\n        // Clear the error message when the user changes the end date\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const handleHomeNavigate = () => {\r\n        const userId = localStorage.getItem('userId');\r\n          \r\n                    if (userId) {\r\n                        // Make an HTTP request to fetch data based on the user ID if needed\r\n                        axios.get('http://localhost:3001/api/QMRA',{\r\n                                params: {\r\n                                    userId: userId,\r\n                                },\r\n                            })\r\n                            .then((response) => {\r\n                                // Handle the response if needed\r\n                                console.log(response.data);\r\n                                navigate('/Home', { state: { userId: userId } });\r\n                            })\r\n                            .catch((error) => {\r\n                                // Handle any errors\r\n                                console.error(error);\r\n                            });\r\n                    } else {\r\n                        // Handle the case where the user ID is not found in localStorage\r\n                        console.error('User ID not found in localStorage');\r\n                    }\r\n      };\r\n\r\n\r\n    const hasDataToDisplay = tableData && tableData.length > 0;\r\n    const hasWetSeasonData = tableData && tableData.some((row) => row.weatherCondition === 'Wet');\r\n    const hasDrySeasonData = tableData && tableData.some((row) => row.weatherCondition !== 'Wet');\r\n    const filteredData = tableData\r\n       .filter((row) => row.samplingId !== null && row.samplingId !== undefined && row.samplingId !== '' && row.muni_name !== null && row.risk_type !== null && row.risk_type !== undefined && row.risk_type !== '');\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\" >\r\n\r\n\r\n\r\n            <Navbar className=\"bg-body-tertiary\">\r\n\r\n                <Container>\r\n\r\n                    <Navbar.Toggle />\r\n\r\n                    <Navbar className=\"bg-body-tertiary\">\r\n                        <Container>\r\n                            <Navbar.Brand href=\"#home\" >\r\n                                <Image\r\n                                    alt=\"\"\r\n                                    src=\"images/SimraLogo.png\"\r\n                                    width=\"60\"\r\n                                    height=\"40\"\r\n                                    className=\"d-inline-block align-left\"\r\n                                />{' '}\r\n                                SIMRA\r\n                            </Navbar.Brand>\r\n                        </Container>\r\n                    </Navbar>\r\n\r\n                </Container>\r\n                <Container>\r\n\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                          \r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <Row>\r\n                <Col xs={6} sm={0} md={0} lg={2}>\r\n                    <Container fluid className=\"side\" >\r\n                        <Card style={{ backgroundColor: 'rgba(108, 117, 125, 0.5)' }}>\r\n                           \r\n                                <Card.Body ><Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} onClick={handleHomeNavigate}><FaHome /> Home</Button></Card.Body>\r\n                                <Card.Body ><Link to=\"/Survey\"><Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }}><FaQuestionCircle /> Survey</Button></Link></Card.Body>\r\n                                <Card.Body><Link to=\"/H2S\"><Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} ><IoWaterOutline /> H2S</Button></Link></Card.Body>\r\n                                <Card.Body><Link to=\"/Video\"><Button variant=\"secondary\" size=\"lg\" style={{ width: '100%' }} ><FaVideo /> Video</Button></Link></Card.Body>\r\n\r\n                                <Card.Body><Link to=\"/\"> <Button style={{ width: '85%', backgroundColor: 'black' }}><FaSignOutAlt /> Logout</Button></Link></Card.Body>\r\n                            </Card>\r\n                    </Container>\r\n                </Col>\r\n\r\n                <Col xs={30} sm={8} md={6} lg={10}>\r\n                    <Row>\r\n                        <Container fluid >\r\n\r\n                            {hasDataToDisplay ? (\r\n                                <div>\r\n                                    <Card style={{ background: 'rgba(255, 255, 255)' }}>\r\n                                        <Card.Body><h1>H2S Report</h1></Card.Body>\r\n                                        <Card.Body>Dry Season</Card.Body>\r\n                                        {hasDrySeasonData ? (\r\n                                          filteredData.filter((row) => row.weatherCondition !== 'Wet').length > 0 ? (\r\n                                            <Card.Body>\r\n                                                <div class=\"scroll\">\r\n                                                    <table class=\"table table-striped table-sticky\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th colspan=\"5\"></th>\r\n                                                                <th colspan=\"3\">Cycle 1</th>\r\n\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Municipality</th>\r\n                                                                <th>NameOfWaterTreat</th>\r\n                                                                <th>Latitude</th>\r\n                                                                <th>Longitude</th>\r\n                                                                <th>SampleID</th>\r\n                                                                <th>SamplingDate</th>\r\n                                                                <th>Prasence/Absence</th>\r\n                                                                <th>Risk/noRisk</th>\r\n\r\n\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {filteredData\r\n                                                                .filter((row) => row.weatherCondition !== 'Wet')\r\n                                                                .map((row, index) => (\r\n                                                                    <tr key={index}>\r\n                                                                        <td>{row.muni_name}</td>\r\n                                                                        <td>{row.waterSourceType}</td>\r\n                                                                        <td>{row.latitude}</td>\r\n                                                                        <td>{row.longitude}</td>\r\n                                                                        <td>{row.samplingId}</td>\r\n                                                                        <td>{formatDate(row.sampling_date_created)}</td>\r\n                                                                        <td>{row.status}</td>\r\n                                                                        <td>{row.risk_type}</td>\r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                        </tbody>\r\n\r\n                                                    </table>\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                            ) : (\r\n                                                <p className=\"nodata-text\">No Report for Dry Season</p> // Display this when there is no data\r\n                                              )\r\n                                        ) : (\r\n                                            <p className=\"nodata-text\">No Report for Dry Season</p> // Display this when there is no data\r\n                                        )}\r\n\r\n                                        <Card.Body>Wet Season</Card.Body>\r\n                                        {hasWetSeasonData ? (\r\n                                              filteredData.filter((row) => row.weatherCondition === 'Wet').length > 0 ? (\r\n                                            <Card.Body>\r\n                                                <div class=\"scroll\">\r\n                                                    <table class=\"table table-striped table-sticky\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th colspan=\"5\"></th>\r\n                                                                <th colspan=\"3\">Cycle 1</th>\r\n\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>Municipality</th>\r\n                                                                <th>NameOfWaterTreat</th>\r\n                                                                <th>Latitude</th>\r\n                                                                <th>Longitude</th>\r\n                                                                <th>SampleID</th>\r\n                                                                <th>SamplingDate</th>\r\n                                                                <th>Prasence/Absence</th>\r\n                                                                <th>Risk/noRisk</th>\r\n\r\n\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {filteredData\r\n                                                                .filter((row) => row.weatherCondition === 'Wet')\r\n                                                                .map((row, index) => (\r\n                                                                    <tr key={index}>\r\n                                                                        <td>{row.muni_name}</td>\r\n                                                                        <td>{row.waterSourceType}</td>\r\n                                                                        <td>{row.latitude}</td>\r\n                                                                        <td>{row.longitude}</td>\r\n                                                                        <td>{row.samplingId}</td>\r\n                                                                        <td>{formatDate(row.sampling_date_created)}</td>\r\n                                                                        <td>{row.status}</td>\r\n                                                                        <td>{row.risk_type}</td>\r\n                                                                         \r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                        </tbody>\r\n\r\n                                                    </table>\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                             ) : (\r\n                                                <p className=\"nodata-text\">No Report for Wet Season</p> // Display this when there is no data\r\n                                              )\r\n                                        ) : (\r\n                                            <p className=\"nodata-text\">No Report for Wet Season</p> // Display this when there is no data\r\n                                        \r\n                                            )}\r\n\r\n                                        <Card.Body>\r\n\r\n                                            <Form.Group>\r\n                                                <Form.Label>Start Date</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"date\"\r\n                                                    value={startDate}\r\n                                                    onChange={handleStartDateChange}\r\n                                                />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group>\r\n                                                <Form.Label>End Date</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"date\"\r\n                                                    value={endDate}\r\n                                                    onChange={handleEndDateChange}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Card.Body> {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}</Card.Body>\r\n\r\n\r\n\r\n                                            <Card.Body>\r\n                                                <Button onClick={exportToExcel}>Download Excel</Button>\r\n                                            </Card.Body>\r\n                                            <Card.Body>\r\n                                                <Button onClick={generatePDF}>Download PDF</Button>\r\n                                            </Card.Body>\r\n\r\n                                        </Card.Body>\r\n\r\n                                    </Card>\r\n                                </div>\r\n                                \r\n                              \r\n                                \r\n                            ) : (\r\n                                <p className=\"nodata-text\">No H2S Reports Are Avaliable For Download</p>\r\n                            )\r\n                        }\r\n\r\n                        </Container>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SurveyReport;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}